@model Nucleus.XmlDocumentation.ViewModels.Viewer
@using Nucleus.Abstractions
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.XmlDocumentation.ViewModels

@Html.AddStyle("~!/../viewer.css")
<div class="XmlDocumentation">
	@if (!String.IsNullOrEmpty(Model.Message))
	{
		<div class="alert alert-warning" role="alert">@Model.Message</div>
	}
	else
	{
		<div class="api-wrapper">
			<div class="api-menu">
				<nav class="accordion">
					<div class="accordion-item">
						@foreach (var document in Model.Documents)
						{
							<h2 id="asm-@document.Namespace.ControlId()" class="accordion-header">
								<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#mnu-@document.Namespace.ControlId()" aria-expanded="@(Model.DefaultOpen || Model.SelectedDocument==document ? "true": "false")" aria-controls="mnu-@document.Namespace.ControlId()">
									@document.AssemblyName
								</button>
							</h2>

							<div id="mnu-@(document.Namespace.ControlId())" class="list-group accordion-collapse collapse @(Model.DefaultOpen || Model.SelectedDocument==document ? "show" : "")">
								<a class="list-group-item" href="@Url.PageLink(Model.Page, $"{@document.SourceFileName}/#asm-{document.Namespace.ControlId()}")">@document.AssemblyName Assembly</a>

								<ul>
									@foreach (var apiClass in document.Classes)
									{
										<li><a id="mnu-@(apiClass.ControlId())" class="list-group-item @(apiClass.FullName==Model.SelectedClass?.FullName ? "active" : "")" href="@Url.PageLink(Model.Page, $"{document.SourceFileName}/{apiClass.FullName}/#mnu-{apiClass.ControlId()}")">@apiClass.Name</a></li>
									}
								</ul>
							</div>

						}
					</div>
				</nav>
			</div>
			<div class="api-content">
				@if (Model.SelectedClass != null)
				{
					// Class page
					@await Html.PartialAsync("_RenderClass.cshtml", Model.SelectedClass)
				}
				else if (Model.SelectedDocument != null)
				{
					// Assembly contents page
					<h2>@Model.SelectedDocument.Namespace.Name</h2>
					@if (Model.SelectedDocument.Namespace.Summary != null)
					{
						<div class="api-summary">
							@await Html.PartialAsync("_RenderMixedContent.cshtml", Model.SelectedDocument.Namespace.Summary)
						</div>
					}
					@if (Model.SelectedDocument.Namespace.Remarks != null)
					{
						<div class="api-remarks">
							<h3>Remarks</h3>
							<div>
								@await Html.PartialAsync("_RenderMixedContent.cshtml", Model.SelectedDocument.Namespace.Remarks)
							</div>
						</div>
					}
					@if (Model.SelectedDocument.Namespace.Examples != null)
					{
						<div class="api-examples">
							<h3>Examples</h3>
							@foreach (var example in Model.SelectedDocument.Namespace.Examples)
							{
								<code>@example</code>
							}
						</div>
					}

					<nav>
						<h2>Classes</h2>
						<ul class="list-group">
							@foreach (var apiClass in Model.SelectedDocument.Classes)
							{
								<li class="list-group-item">
									<a class="list-group-item-action" href="@Url.PageLink(Model.Page, $"{Model.SelectedDocument.SourceFileName}/{apiClass.FullName}/#mnu-{@apiClass.ControlId()}"))">@apiClass.Name Class</a>
									<div>
										@await Html.PartialAsync("_RenderMixedContent.cshtml", apiClass.Summary)
									</div>
								</li>
							}
						</ul>
					</nav>
				}
			</div>

		</div>
	}
</div>