@model Nucleus.ViewFeatures.ViewModels.FileSelector
@if (!String.IsNullOrEmpty(Model.SelectedFile?.Path))
{
	<div>@Model.SelectedFile.Name</div>
	<span class="button">
		<label>
			<span class="MaterialIcon">&#xe2c6</span> Select Another File
			<input type="submit" class="Hide" formaction="@Url.NucleusAction(@Model.SelectAnotherActionName, Model.ControllerName, Model.AreaName, Model.ExtensionName)">
		</label>
	</span>
	@Html.Hidden(@Model.PropertyName + ".Id", Model.SelectedFile.Id)
	@Html.Hidden(@Model.PropertyName + ".Provider", Model.SelectedFile.Provider)
	@Html.Hidden(@Model.PropertyName + ".Parent.Id", Model.SelectedFile.Parent.Id)
	@Html.Hidden(@Model.PropertyName + ".Path", Model.SelectedFile.Path)
}
else
{
	@Html.DropDownList(@Model.PropertyName + ".Provider", new SelectList(Model.Providers, "Key", "Value.Name", @Model.SelectedFile.Provider), new { @class = "providerKey", @data_autopostbackevent = "change", @onchange = $@"jQuery('#{Model.PropertyName}_Parent_Id').val(''); jQuery('#{Model.PropertyName}_Id').val('');" })
	@Html.DropDownList(@Model.PropertyName + ".Parent.Id", new SelectList(Model.SelectedFolder.Folders, "Id", "Name", @Model.SelectedFile.Parent), new { @data_autopostbackevent = "change", @onchange = $@"jQuery('#{Model.PropertyName}_Id').val('');" })
	@Html.DropDownList(@Model.PropertyName + ".Id", new SelectList(Model.SelectedFolder.Files, "Id", "Name", @Model.SelectedFile.Path), Model.SelectedFolder.Files.Count > 0 ? "(select)" : "(no files)", new { @data_autopostbackevent = "change" })
}