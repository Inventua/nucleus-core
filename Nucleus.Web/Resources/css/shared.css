html, body
{
	height: 100%;
/*	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
*/}

body 
{
	/*margin: 0;*/
	overflow: auto;
}

@font-face 
{
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url(../material-icons.woff2) format('woff2');
  font-display: auto;
}

/* set max width for bootstrap tooltips */
.tooltip-inner
{
  max-width: 100vw;
}

.fs-small
{
  font-size: 0.9rem;
}

.fs-smaller
{
  font-size: 0.8rem;
}

.btn label span
{
  vertical-align: text-top;
}

.btn.btn-none
{
  background-color: transparent;
  border-color: transparent;
  border: 0;
  padding: 0;
  margin: 0;
  border-radius: 0;
}

.btn.btn-none:focus
{
  border-color: #ccc;
}

.btn.btn-none:focus-visible
{
  outline: -webkit-focus-ring-color auto 1px;
}

a *
{
  cursor: pointer;
}

.nucleus-material-icon
{
	font-family: 'Material Icons'!important; 
}

.nucleus-show-progress-inside .nucleus-progress-spinner
{
  position: absolute;
  right: 0.5rem;
}

.nucleus-show-progress-after .nucleus-progress-spinner
{
  margin-left: 0.5rem;
}

.nucleus-show-progress-before .nucleus-progress-spinner
{
  margin-right: 0.5rem;
}

.nucleus-progress-medium
{
  margin: auto; 
  width: 407px; 
  height: 407px;
  animation: show-progress 1s 1.5s forwards;
  opacity: 0;
}

@keyframes show-progress {
  to { opacity: 1; }
}


/*  nucleus-modal-caption is used to set popup captions and should not be displayed in content */
.nucleus-inline-edit-controls
{
  display: none;
}


.Nucleus.AdminFrame
{
	position: fixed;
	top: 0;
	left: 0;
	width: 100px;
	height: 100%;
  border: 0;
	transition: 0.25s;
}

.nucleus-modulesettings-frame
{
	display: none;
	z-index: 99;
	border: 0;
  flex-grow: 1;
	/*width: 100%;
	height: 100%;
  position: absolute;*/
}

.AdminFramePlaceholder
{
	float: left;
	width: 100px;
	height: 100%;
}

.Nucleus.AdminFrame.Expanded
{
	width: 100%;
	z-index: 10000;
}

.Nucleus.Content
{
	left: 100px;
	height: 100%;
}

/*.PopupMenu
{
	display: none;
}
*/
.nucleus-overlay
{
	display: none;
	position: fixed;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	background-color: black;
	opacity: 0.25;
	z-index: 3;	
}

/*  Styles for the progress bar rendered with the <Progress> tag helper (in the Files and Extensions page).  */
.UploadProgress 
{
	display: none;
  border: solid 1px #333;
  padding: 1rem;
  position: absolute;
  left: 0.25rem;
  right: 0.25rem;
  background-color: white;
  z-index: 100;
}

.UploadProgress label
{
  font-size: 0.8rem;
}

.UploadProgress progress
{
  appearance: none;
  display: block;
	width: 100%;
  height: 1.5rem;
}

/*  cross-browser styling for the <progress> element.  */
/*  The transition style is only known to work in Edge and Chrome */

/*  background component  */
.UploadProgress progress::-webkit-progress-bar { background-color: white; width: 100%; }
.UploadProgress progress { background-color: white; }

/*  value component  */
.UploadProgress progress::-webkit-progress-value { background-color: #0d6efd!important; border-radius: 6px; transition: width 1s; }
.UploadProgress progress::-moz-progress-bar { background-color: #0d6efd!important; border-radius: 6px; transition: width 1s; }
.UploadProgress progress { color: #0d6efd; border-radius: 6px; transition: width 1s; }

.ValidationError
{
	border: solid 2px red!important;
}

/* override bootstrap modal width constraints & handle full-size modals */
.modal-full-size.modal-dialog
{
  max-height: 100%;
  max-width: 100%;
  height: 100%;
  width: 100%;
  margin: 0;
}

.modal-full-size.modal-dialog .modal-content
{
  height: 100%;
}

.modal-auto-size.modal-dialog
{
  max-width: 80%;
  width: auto;
}

.modal-dialog .modal-header
{
  gap: 0.5rem;
}

.modal-dialog .modal-title
{
  flex: 1;
}

.modal-dialog .modal-header .btn-minimize, .modal-dialog .modal-header .btn-maximize
{
  margin: -0.5rem -0.5rem -0.5rem auto;
  padding: 0.5rem;
  border: 0;
  font-size: 1.3rem;
  display: none;
}

.modal-full-size.modal-dialog > .modal-content > .modal-header > .btn-minimize
{
  display: block;
}

.modal-auto-size.modal-dialog > .modal-content > .modal-header > .btn-maximize
{
  display: block;
}

/*  prevent selection of dialog header - when handling double-click to set modal to full size, edge selects the text and shows a menu, this prevents that from happening  */
.modal-header
{
  user-select: none; 
}

.modal-body
{
  display: flex;  
  flex-direction: column;
  justify-content: stretch;
}

/*.modal-auto-size .modal-body
{
  flex-direction: column;
  justify-content: stretch;
}*/

.modal-auto-size .modal-content
{
  min-height: 90%;
}

/* Nucleus (shared.js:_dialog) css */
.modal-dialog .dialog-icon
{
  font-size: 3rem;
  flex-grow: 1;
  max-width: 3rem;
  margin-right: 1rem;
}

.modal.icon-error .modal-dialog .dialog-icon 
{
  color: #ec1111;
}

.modal.icon-warning .modal-dialog .dialog-icon 
{
  color: #f9b512;
}

.modal.icon-question .modal-dialog .dialog-icon 
{
  color: #0d6efd; 
}

.modal-dialog .dialog-message
{
  flex-grow: 5;
  margin: auto;
}

/*  Extend bootstrap width classes to provide a "width 1", which is generally used for table cells to specify that the cell should be as small as */
/*  possible while extending to fit content (table rendering ignores width if the content can't fit) */
.w-min-fit-content
{
  width: 1px;
  white-space: nowrap;
}

/*  Indeterminate progress bar, for use with bootstrap progress class*/
@keyframes indeterminate 
{
  0% {
    margin-left: 0;
  }
  100% {
    margin-left: 55%;
  }
}

.progress .indeterminate {
  animation: indeterminate 2.5s linear infinite alternate;
  border-radius: 1rem;
  width: 45% !important;
}

.nucleus-small-cell
{
	width: 20px;
	background-color: transparent;
	padding: 2px;
}

.nucleus-small-cell .nucleus-material-icon
{
	font-size: 15px;
}

.nucleus-small-cell .btn/*:not(.nav-link)*/
{
	padding: 4px 6px;
	margin-right: 0;
}

/* supplement bootstrap tab style to add a border and padding */
.tab-content
{
  border: 1px solid #dee2e6;
  border-top-width: 0;
  padding: 0.6rem;
  display: flex;
  flex-grow: 1;
  overflow: auto;
}

.tab-content .tab-pane.active
{
  display: flex;
  flex-direction: column;
  flex-basis: 100%;
  /*align-self: flex-start;*/  
}

/* override bootstrap breadcrumb style */
.breadcrumb
{
  margin: 0 1rem 0 1rem; 
}

/* mobile-only elements */
.nucleus-mobile-only
{
  display: none;
}

.navbar-nav.nucleus-mobile-menu
{
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0.5rem;
}

/* supplement bootstrap menu to allow submenus */
.nucleus-menu .dropdown-submenu 
{
  position: relative;
}

.nucleus-menu .dropdown-submenu .dropdown-menu .dropdown-menu.show
{
  display: inline-block;  
  top: -0.5rem;
}

.nucleus-menu .nav-link
{
  display: inline-block;
  vertical-align: middle;
  padding: 8px;
}

.nucleus-menu .nav-link:nth-child(2)
{
  margin-left: -4px;
  /*padding-left: 0;*/
}

.nucleus-menu .dropdown-menu .dropdown-toggle::after 
{
  margin-top: 0.1rem;
  margin-left: 1rem;
  transform: rotate(-90deg);
}

.nucleus-menu .dropdown-menu .dropdown-item
{
  flex-grow: 1;
  margin-right: 1rem;
}

.nucleus-menu .dropdown-menu .dropdown-toggle::after 
{
  margin-top: 0.7rem;
  margin-right: 0.25rem;
}

.nucleus-menu .dropdown-submenu .dropdown-submenu 
{
  display: flex;
}

.nucleus-menu .dropdown-submenu .dropdown-submenu .dropdown-menu
{
  left: 100%;
}

.nucleus-menu .dropdown-submenu .dropdown-submenu .dropdown-toggle::after 
{
  position: absolute;
  right: 0;
}

.dropdown-menu .alert
{
  margin: -0.5rem 0 0.5rem 0;
}
/*  ribbon menu styles */
.nucleus-menu .ribbon-item, .nucleus-menu .ribbon-item li
{
  list-style-type: none;  
}

.nucleus-menu .ribbon-item, .nucleus-menu .ribbon-item UL
{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.nucleus-menu .ribbon-item li
{
  padding: 0;
  white-space: nowrap;
  min-width: 10rem;
}

.nucleus-menu .dropdown-submenu > .nucleus-menu .ribbon-item.RibbonPortrait
{
  flex-direction: column;  

}

.nucleus-menu .dropdown-submenu > .ribbon-item.RibbonPortrait 
{
  grid-template-columns: repeat(4, max-content);
  grid-auto-rows: auto;
}

.nucleus-menu .dropdown-submenu > .ribbon-item.RibbonLandscape
{
  flex-direction: row;
}

.nucleus-menu .dropdown-menu.ribbon-item.RibbonLandscape.show
{
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.nucleus-menu .dropdown-submenu > .ribbon-item.show 
{
  display: flex; 
  gap: 0.25rem;
}

.nucleus-menu .dropdown-submenu > .ribbon-item.RibbonPortrait.show
{
  display: grid;
}

.nucleus-menu .dropdown-submenu > .ribbon-item > li
{  
  border: solid 1px #dee2e6;  
  padding: 0.25rem;
}

.nucleus-menu .dropdown-submenu > .ribbon-item > li > a
{
  flex-basis: 100%
}


.nucleus-account-control.justify-content-end .dropdown-menu
{
	left: initial;
	right: 0;
	margin: auto;
}

.nucleus-account-control.justify-content-start .dropdown-menu
{
	left: 0;
	right: initial;
	margin: auto;
}


/*  Toggle switch plugin  */
input[type=range].ToggleSwitch
{
	-webkit-appearance: none;
  width: 50px;
  height: 25px;
  background: #d3d3d3;
  outline: gray;
  opacity: 0.7;
  transition: opacity .2s;
  /*padding: 2px;*/
  vertical-align: middle;
  font-size: 18px;
  position: relative;
  margin-right: 0.25em;
}

input[type=range].ToggleSwitch::-webkit-slider-thumb 
{
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  background-color: gray;  
  cursor: pointer;
}

input[type=range].ToggleSwitch::-webkit-slider-runnable-track
{
  -webkit-appearance: none;
  appearance: none;
  height: 25px;
}

input[type=range].ToggleSwitch::-moz-range-thumb 
{
  width: 25px;
  height: 25px;
  background-color: gray;
  cursor: pointer;
}

input[type=range].ToggleSwitch::-moz-range-track
{
  height: 25px;
}

input[type=range].ToggleSwitch.checked::-webkit-slider-thumb 
{
  background-color: #1979A2;
}

input[type=range].ToggleSwitch.checked::-moz-range-thumb
{
  background-color: #1979A2;
}

input[type=range].ToggleSwitch:after
{
  font-family: 'Material Icons'!important; 
	content: "";
	position: absolute;
	left: 8px;
	top: 0;
  color: white;
  font-size: 16px;
}

input[type=range].ToggleSwitch.checked:after
{
	content: "\e876";
	left: 30px;
}

/* Set default styles for Html Editors */
.trumbowyg-editor, .trumbowyg-textarea,
.tox.tox-tinymce,
.nucleus-htmleditordefaults
{
	height: auto!important;	
	background-color: white;
	padding: 4px;
	min-height: 30vh;
	flex-grow: 1;
}

.comma-separated li:not(:last-child)::after
{
  content: ', ';
}