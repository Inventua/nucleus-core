@model Nucleus.Modules.PageLinks.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@using Nucleus.Extensions
@Html.AddStyle("~!/../settings.css")
<h1 class="nucleus-modal-caption">Page Links Settings</h1>
@using (Html.BeginNucleusForm("SaveSettings", "PageLinksSettings", "PageLinks", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
  <Tab>
    <TabItem target="#pagelink-settings" caption="Settings" active="true"></TabItem>
    <TabItem target="#pagelink-list" caption="Page Links" enabled=@(Model.Mode == Nucleus.Modules.PageLinks.Models.Settings.Modes.Manual)></TabItem>
  </Tab>

  <TabContent>
    <TabPanel id="pagelink-settings" active="true">
      <fieldset role="group" aria-labelledby="heading">
        <h2 class="nucleus-control-panel-heading">Settings</h2>
        <div class="nucleus-flex-fields">
          <SettingsControl caption="Mode" helptext="Select whether to automatically generate page links, or manually specify them.">
            @Html.DropDownListFor(model => model.Mode, Html.GetEnumSelectList<Nucleus.Modules.PageLinks.Models.Settings.Modes>(), new { @class = "pagelinks-mode" })
          </SettingsControl>
        </div>
        <div class="nucleus-flex-fields">
          <SettingsControl caption="Heading Css Class" helptext="CSS class used to detect child header elements. Automatic mode only.">
            @Html.TextBoxFor(model => model.HeadingClass, new { })
          </SettingsControl>

          <SettingsControl caption="jQuery Selector for Body/Root" helptext="Enter the jQuery selector for body/root that will detect elements. Automatic mode only.">
            @Html.TextBoxFor(model => model.RootSelector, new { })
          </SettingsControl>
        </div>

        <h3 class="d-block">Headers Included</h3>
        <div class="nucleus-flex-fields">
          @foreach (var header in Model.IncludeHeaders)
          {
            <SettingsControl caption="@header.Key.DisplayName()" helptext="@header.Key.Description()" class="inner-inline">
              @Html.CheckBoxFor(model => model.IncludeHeaders[header.Key], new { @class = "ToggleSwitch" })
            </SettingsControl>
          }
        </div>
      </fieldset>
    </TabPanel>

    <TabPanel id="pagelink-list">
      <div class="nucleus-form-tools">
        @Html.SubmitButton("&#xe147", "Add Page Link", @Url.NucleusAction("AddPageLink", "PageLinksSettings", "PageLinks"), new { @data_target = "#PageLinksList" })
      </div>

      <div id="PageLinksList">
        @await Html.PartialAsync("_PageLinksList.cshtml", Model)
      </div>
    </TabPanel>

  </TabContent>
  <div class="nucleus-button-panel">
    @Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "PageLinksSettings", "PageLinks"), new { })
  </div>
}
<script>
  jQuery(function ()
  {
    jQuery('.pagelinks-mode').on('change', function (event)
    {
      // Disable tab in automatic mode
      jQuery('button[aria-controls="pagelink-list"]').toggleClass('disabled', jQuery(this).val() === '0');
    });
  });
</script>