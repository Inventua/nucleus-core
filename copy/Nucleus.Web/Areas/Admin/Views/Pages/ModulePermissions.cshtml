@model Nucleus.Web.ViewModels.Admin.PageEditor
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models

<fieldset role="group" aria-labelledby="heading">
	<h3>Permissions</h3>
	<SettingsControl caption="Inherit Page Permissions?" rendermode="LabelLast" class="inner-inline" helptext="Specifies whether to disable module permission checks.">
		@Html.CheckBoxFor(model => Model.Module.InheritPagePermissions, new { @class = "ToggleButtonControl" })
	</SettingsControl>

	@if (Model.ModulePermissions.Values.Count > 0)
	{
		<table>
			<tr>
				<th></th>
				@foreach (var permissionType in Model.ModulePermissionTypes)
				{
					<th class="align-center">@permissionType.Name</th>
				}
			</tr>

			@foreach (var item in Model.ModulePermissions.Values)
			{
				<tr>
					<td>
						@item.Role.Name
					</td>

					@for (int permissionsCount = 0; permissionsCount < Model.ModulePermissions[item.Role.Id].Permissions.Count; permissionsCount++)
					{
						<td>
							@Html.HiddenFor(model => Model.ModulePermissions[item.Role.Id].Permissions[permissionsCount].Id)
							@Html.HiddenFor(model => Model.ModulePermissions[item.Role.Id].Permissions[permissionsCount].PermissionType.Id)
							@Html.CheckBoxFor(model => Model.ModulePermissions[item.Role.Id].Permissions[permissionsCount].AllowAccess)
						</td>
					}

					<td class="SmallIconCell"><input type="submit" formaction="@Url.AreaAction("DeleteModulePermissionRole", "Pages", "Admin", new { id = item.Role.Id })" value="&#xe14c;" class="MaterialIcon" title="Delete" data-target=".ModuleCommonSettingsEditor" /></td>
				</tr>
			}
		</table>
	}
</fieldset>


