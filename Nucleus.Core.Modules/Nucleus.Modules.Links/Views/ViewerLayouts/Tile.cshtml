@model Nucleus.Modules.Links.ViewModels.Viewer
@using Nucleus.Modules.Links.ViewModels
@using Nucleus.Modules.Links.HtmlHelpers
@Html.AddStyle("~!/Tile.css")
<div class="Links">
	<div class="link-tiles">
		@foreach (var link in Model.Links)
		{
			string url = "";
			@switch (link.LinkType)
			{
				case Nucleus.Modules.Links.Models.LinkTypes.Url:
					url = link.LinkUrl?.Url;
					break;
				case Nucleus.Modules.Links.Models.LinkTypes.File:
					url = @Url.FileLink(link.LinkFile?.File);
					break;
				case Nucleus.Modules.Links.Models.LinkTypes.Page:
					url = @Url.PageLink(link.LinkPage?.Page);
					break;
			}
			@if (!String.IsNullOrEmpty(url))
			{				
				<a class="d-flex document-title" href="@url" alt="@link.Title" target="@(Model.NewWindow ? "_blank" : "")">
					@if (Model.ShowImages && link.ImageFile != null)
					{
						<img class="me-1" src="@Url.FileLink(link.ImageFile)" width="@(link.ImageFile.Width.HasValue ? link.ImageFile.Width.Value : "" )" height="@(link.ImageFile.Height.HasValue ? link.ImageFile.Height.Value : "" )" alt="">						
					}
					<div class="flex-fill">
						@Html.AddEditingControls(@link.Id)
						<span class="fw-bold">@link.Title</span>
						<div class="document-description">@link.Description</div>
					</div>
				</a>				
			}
		}
	</div>
</div>
