@model Nucleus.ViewFeatures.ViewModels.PagingControl
@Html.AddStyle("~!PagingControl.css")
@if (@Model.Results == null || @Model.Results.TotalCount <= 0)
{
	@Html.HiddenFor(model => model.Results.PageSize)
}
else
{
	<div class="nucleus-paging-control @Model.RenderMode.ToString().ToLower()">
		@if (Model.Results.Pages.Count > 1)
		{
			<div class="nucleus-pagingcontrol-left">				
				@if (Model.RenderMode == Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Standard)
				{
          <span class="nucleus-paging-control-summary">Page @Model.Results.CurrentPageIndex of @Model.Results.TotalPages</span>
					<button type="button" class="btn nucleus-material-icon nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" aria-label = "Select First Page" data-page="1">&#xe5dc;</button>
					<button type="button" class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" aria-label = "Select Previous Page" data-page="@(Model.Results.CurrentPageIndex - 1)">Previous</button>

					@foreach (int pageNumber in Model.Results.PageControlNumbers)
					{						
						<button type="button" class="btn nucleus-pagingcontrol-pagebutton@(pageNumber == Model.Results.CurrentPageIndex ? " Current" : "")" aria-label = "Select Page @pageNumber" data-page="@pageNumber">@pageNumber</button>
					}

					@if (Model.Results.PageControlNumbers.Last() != Model.Results.TotalPages)
					{
						<span class="align-self-end" aria-hidden="true">...</span>
						<button type="button" class="btn nucleus-pagingcontrol-pagebutton" data-page="@Model.Results.TotalPages">@Model.Results.TotalPages</button>
					}

					<button type="button" class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" aria-label = "Select Next Page" data-page="@(Model.Results.CurrentPageIndex + 1)">Next</button>
					<button type="button" class="btn nucleus-material-icon nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" aria-label = "Select Last Page" data-page="@Model.Results.TotalPages">&#xe5dd;</button>
				}
			</div>
      @if (Model.RenderMode == Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Standard)
      {
        <div class="spinner-border spinner-border-sm text-light nucleus-progress-spinner ms-2 collapse" role="status"></div>
      }
			@Html.DropDownList(Model.PropertyName + ".CurrentPageIndex", new SelectList(Model.Results.Pages, "Key", "Value", Model.Results.CurrentPageIndex), new { @class = "nucleus-pagingcontrol-pagedropdown no-appearance-override", @aria_label="Select Page", @title = "Select Page", @data_autopostbackevent = "change" })
      @if (Model.RenderMode == Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Compact)
      {
        <span class="nucleus-paging-control-summary">of @Model.Results.TotalPages</span>
      }
    }
		<label class="nucleus-pagingcontrol-pagesizelabel">Page Size:</label>
		@Html.DropDownList(Model.PropertyName + ".PageSize", new SelectList(Model.Results.PageSizes, Model.Results.PageSize), new { @class = "nucleus-pagingcontrol-pagesizedropdown no-appearance-override", @title = "Page Size", @aria_label="Page Size" })
	</div>
}

<script>
	jQuery(document).ready(function()
	{
    jQuery(Page).on("progress", function (e, args) 
    {
      /* show progress indicator if a button inside the paging control was clicked */
      if (jQuery(args.event?.originalEvent?.target).closest('.nucleus-paging-control').length > 0 )
      {
        jQuery(args.event?.currentTarget).find('.nucleus-progress-spinner').addClass('show');
      }
    });

		jQuery(document).on('click', '.nucleus-paging-control [data-page]:not(.disabled)', function (event)
		{
			/* handle controls with a data-page attribute (the numbered page buttons and the first/last/prev/next buttons) */
			jQuery(this).parents('.nucleus-paging-control').find('.nucleus-pagingcontrol-pagedropdown').val(jQuery(event.currentTarget).attr('data-page'));
			event.preventDefault();
			event.stopImmediatePropagation();
      jQuery(this).parents('form').trigger(jQuery.Event('submit', { srcElement: this, originalEvent: event }));
    });

		jQuery(document).on('change', '.nucleus-pagingcontrol-pagesizedropdown', function(event) 
		{
			/* Reset current page to zero when the user changes the page size */
			jQuery(this).parent('.nucleus-paging-control').find('.nucleus-pagingcontrol-pagedropdown').val('1');
			event.preventDefault();
			event.stopImmediatePropagation();
      jQuery(this).parents('form').trigger(jQuery.Event('submit', { srcElement: this, originalEvent: event }));
    });
	});
</script>