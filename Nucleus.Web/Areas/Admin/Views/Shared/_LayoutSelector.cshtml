@model Nucleus.Web.ViewModels.Admin.LayoutSelector
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Abstractions;
<div class="style-selector layout-selector flex">
  <div class="mb-1 bg-secondary-subtle p-2">
    <button type="button" class="btn btn-secondary nucleus-material-icon icon-large select-flex" onclick="jQuery('.style-selector').removeClass('grid').addClass('flex');" title="List">&#xe8fe;</button>
    <button type="button" class="btn btn-secondary nucleus-material-icon icon-large select-grid" onclick="jQuery('.style-selector').removeClass('flex').addClass('grid');" title="Grid">&#xe9b0;</button>
  </div>
  <div class="content-area">
  <ul>
    @foreach (var layout in Model.Layouts)
    {
      <li>
        <button class="select-layout flex-fill btn btn-outline-primary@(Model.SelectedLayoutId == layout.Id ? " selected" : "")" data-bs-dismiss="modal" data-layout-id="@layout.Id">
          <h6>
            <span>@layout.FriendlyName</span>
            @if (!String.IsNullOrEmpty(layout.Extension))
            {
              <span class="extension">(@layout.Extension)</span>
            }
            @if (Model.SelectedLayoutId == layout.Id)
            {
              <span class="nucleus-material-icon icon-large ms-auto">&#xe86c;</span>
            }
          </h6>

          <div class="flex-row">
            <div class="flex-1 me-2 description">
              @if (!String.IsNullOrEmpty(layout.Description))
              {
                @Html.Raw(@layout.Description)
              }
              else
              {
                <text>No description.</text>
              }
            </div>
            @if (!String.IsNullOrEmpty(layout.ThumbnailUrl))
            {
              <img class="thumbnail" src="@layout.ThumbnailUrl" />
            }
          </div>
        </button>
      </li>
    }
  </ul>
  </div>
</div>