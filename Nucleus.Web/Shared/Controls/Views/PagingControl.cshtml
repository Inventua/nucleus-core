@model Nucleus.ViewFeatures.ViewModels.PagingControl
@Html.AddStyle("~!PagingControl.css")
@if (@Model.Results == null || @Model.Results.TotalCount <= 0)
{
	@Html.HiddenFor(model => model.Results.PageSize)
}
else
{
	<div class="nucleus-paging-control @Model.RenderMode.ToString().ToLower()">
		@if (Model.Results.Pages.Count > 1)
		{
			<div class="nucleus-pagingcontrol-left">
				<span class="nucleus-paging-control-summary">Page @Model.Results.CurrentPageIndex of @Model.Results.TotalPages</span>
				@if (Model.RenderMode == Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Standard)
				{
					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" data-page="1">|&lt;</a>
					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" data-page="@(Model.Results.CurrentPageIndex - 1)">Previous</a>

					@foreach (var pageInfo in Model.Results.Pages)
					{
						@if (pageInfo.Key == Model.Results.TotalPages && Model.Results.TotalPages > Model.Results.MaxPageControls)
						{
							<span>...</span>
						}
						<a class="btn nucleus-pagingcontrol-pagebutton@(pageInfo.Key == Model.Results.CurrentPageIndex ? " Current" : "")" data-page="@pageInfo.Key">@pageInfo.Key</a>
					}
					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" data-page="@(Model.Results.CurrentPageIndex + 1)">Next</a>
					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" data-page="@Model.Results.TotalPages">&gt;|</a>
				}
			</div>

			@Html.DropDownList(Model.PropertyName + ".CurrentPageIndex", new SelectList(Model.Results.Pages, "Key", "Value", Model.Results.CurrentPageIndex), new { @class = "nucleus-pagingcontrol-pagedropdown", @title = "Select Page", @data_autopostbackevent = "change" })
		}
		<label class="nucleus-pagingcontrol-pagesizelabel">Page Size:</label>
		@Html.DropDownList(Model.PropertyName + ".PageSize", new SelectList(Model.Results.PageSizes, Model.Results.PageSize), new { @class = "nucleus-pagingcontrol-pagesizedropdown", @title = "Page Size", @data_autopostbackevent = "change" })
	</div>
}

<script>
	jQuery(document).off('click.pagingcontrol');
	jQuery(document).on('click.pagingcontrol', '.nucleus-paging-control [data-page]:not(.disabled)', function (event)
	{
		jQuery('#@(Model.PropertyName)_CurrentPageIndex').val(jQuery(event.currentTarget).attr('data-page')).trigger("change");
	});

	jQuery(document).off('change.pagesize');
	jQuery(document).on('change.pagesize', '#@(Model.PropertyName)_PageSize', function(event) 
	{
		/* Reset current page to zero when the user changes the page size */
		jQuery('#@(Model.PropertyName)_CurrentPageIndex').val(0);
		return false;
	});
</script>