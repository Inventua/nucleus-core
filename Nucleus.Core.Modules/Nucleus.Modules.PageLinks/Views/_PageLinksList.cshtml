@model Nucleus.Modules.PageLinks.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
<table class="table table-sm PageLinks">
	<tr>
		<th>Target Id</th>
		<th>Title</th>
		<th colspan="4"></th>
	</tr> 
  @foreach (var item in Model.PageLinks.Select((PageLink, Index) => new { Index, PageLink }))
  {
		<tr>
      <td>
        @Html.HiddenFor(model => model.PageLinks[item.Index].Id)
        @Html.HiddenFor(model => model.PageLinks[item.Index].SortOrder)
        @Html.TextBoxFor(model => model.PageLinks[item.Index].TargetId)
      </td>
      <td>
        @Html.TextBoxFor(model => model.PageLinks[item.Index].Title)
      </td>

      <td class="nucleus-small-cell"><button type="submit" formaction="@Url.NucleusAction("RemovePageLink", "PageLinksSettings", "PageLinks")?id=@item.PageLink.Id" class="nucleus-material-icon btn btn-danger" title="Delete" data-target="#PageLinksList" data-confirm="Delete this page link?">&#xe14c;</button></td>
			<td class="nucleus-small-cell">
        @if (item.Index != 0)
				{
          <button type="submit" formaction="@Url.NucleusAction("MoveUp", "PageLinksSettings", "PageLinks")?id=@item.PageLink.Id" class="nucleus-material-icon btn btn-outline-secondary" title="Move Up" data-target="#PageLinksList">&#xe5d8;</button>
				}
			</td>
			<td class="nucleus-small-cell">
        @if (item.Index < Model.PageLinks.Count - 1)
				{
          <button type="submit" formaction="@Url.NucleusAction("MoveDown", "PageLinksSettings", "PageLinks")?id=@item.PageLink.Id" value="" class="nucleus-material-icon btn btn-outline-secondary" title="Move Down" data-target="#PageLinksList">&#xe5db;</button>
				}
			</td>
		</tr>
	}  
</table>