@model Nucleus.Modules.Maps.ViewModels.Settings
@Html.AddStyle("~#settings.css")
<h1 class="nucleus-modal-caption">Settings</h1>
@using (Html.BeginNucleusForm("Settings", "MapsSettings", "Maps", FormMethod.Post, new { }))
{
  <fieldset role="group" aria-labelledby="heading" class="flex-grow-1">
    <h2 class="nucleus-control-panel-heading">Settings</h2>
    <SettingsControl caption="Maps" helptext="Select maps provider.">
      @Html.DropDownListFor(model => model.MapProvider, new SelectList(Model.MapProviders), new { @data_autopostbackevent = "change" })
    </SettingsControl>
    <div class="nucleus-flex-fields">
      <SettingsControl caption="API Key" helptext="Mandatory API Key that is used to authenticate requests to the API." class="flex-grow-2">
        @Html.PasswordFor(model => model.ApiKey, new { value = (Model.MapSettings.IsSubscriptionKeySet ? Nucleus.Modules.Maps.ViewModels.Settings.DUMMY_APIKEY : "") })
      </SettingsControl>
    </div>
    <div class="nucleus-flex-fields">
      <SettingsControl caption="Zoom level" helptext="Representation of the map in a grid. Valid range is between 0-24. A zoom level of 0 will render a world view. A high zoom level may not have the map tile details and will render a blank image.">
        @Html.TextBoxFor(model => model.MapSettings.Zoom, new { @type = "number", @inputmode = "integer", @min = "0", @max = "24", @step = "1" })
      </SettingsControl>
      <SettingsControl caption="Latitude" helptext="Latitude map coordinate with a precision up to 6 decimal places. Valid range is between -90 to 90." class="flex-grow-2">
        @Html.TextBoxFor(model => model.MapSettings.Latitude, new { @min = "-90", @max = "90" })
      </SettingsControl>
      <SettingsControl caption="Longitude" helptext="Longitude map coordinate with a precision up to 6 decimal places. Valid range is between -180 to 180." class="flex-grow-2">
        @Html.TextBoxFor(model => model.MapSettings.Longitude, new { @min = "-180", @max = "180" })
      </SettingsControl>
      <SettingsControl caption="Width" helptext="Width of the map image in pixels." class="flex-grow-2">
        @Html.TextBoxFor(model => model.MapSettings.Width, new { @type = "number" })
      </SettingsControl>
      <SettingsControl caption="Height" helptext="Height of the map image in pixels." class="flex-grow-2">
        @Html.TextBoxFor(model => model.MapSettings.Height, new { @type = "number" })
      </SettingsControl>
    </div>
    @{
      ViewDataDictionary providerSettings = new ViewDataDictionary(ViewData);
      providerSettings.TemplateInfo.HtmlFieldPrefix = Html.NameFor(model => model.MapSettings);
    }
    @await Html.PartialAsync(Model.MapProviderSettingsView, Model.MapSettings, providerSettings)
  </fieldset>
	<div class="nucleus-form-buttonrow">
		@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "MapsSettings", "Maps"), new { })
	</div>
}
