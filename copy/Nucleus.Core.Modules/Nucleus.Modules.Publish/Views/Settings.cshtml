@model Nucleus.Modules.Publish.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<div>
	@using (Html.BeginNucleusForm("Settings", "Admin", "Publish", FormMethod.Post, new { @enctype = "multipart/form-data" }))
	{
		<Tab>
			<TabItem target="#article-list" caption="Articles" active="true"></TabItem>
			<TabItem target="#publish-settings" caption="Settings"></TabItem>
		</Tab>

		<TabContent>
			<TabPanel id="article-list" active="true">
				<div class="Tools">
					<div class="button">
						<label>
							<span class="MaterialIcon">&#xe147</span> Add Article
							<input type="submit" class="Hide" formaction="@Url.NucleusAction("Create", "Admin", "Publish")">
						</label>
					</div>
				</div>

				<table class="Articles">
					<tr>
						<th>Title</th>
						<th>Description</th>
					</tr>
					@for (int articleCount = 0; articleCount < Model.Articles.Count; articleCount++)
					{
						<tr>
							<td>
								@Html.HiddenFor(model => model.Articles[articleCount].Id)
								@Model.Articles[articleCount].Title
							</td>

							<td>@Model.Articles[articleCount].Description</td>
							<td class="SmallIconCell"><input type="submit" formaction="@Url.NucleusAction("Edit", "Admin", "Publish")?mid=@Model.ModuleId&id=@Model.Articles[articleCount].Id" value="&#xe3c9;" class="MaterialIcon" title="Edit" /></td>
							<td class="SmallIconCell"><input type="submit" formaction="@Url.NucleusAction("Delete", "Admin", "Publish")?mid=@Model.ModuleId&id=@Model.Articles[articleCount].Id" value="&#xe14c;" class="MaterialIcon" title="Delete" /></td>
						</tr>
					}
				</table>
			</TabPanel>
			<TabPanel id="publish-settings">
				<fieldset role="group" aria-labelledby="heading">
					<h2>Settings</h2>
					<div class="Flex">
						<SettingsControl caption="Categories List" helptext="Select the list to use for categories for this module instance.  Lists are managed in the Nucleus Lists manager.">
							@Html.DropDownListFor(model => model.CategoryList.Id, new SelectList(Model.Lists, "Id", "Name"), "(not selected)")
						</SettingsControl>
						<SettingsControl caption="Layout" helptext="Display layout.">
							@Html.DropDownListFor(model => model.Layout, new SelectList(Model.Layouts))
						</SettingsControl>
					</div>

					<div class="Tools">
						@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "Admin", "Publish"), new { })
						@if (!String.IsNullOrEmpty(@Model.Message))
						{
							<div class="Message">@Model.Message</div>
						}
					</div>
				</fieldset>

			</TabPanel>
		</TabContent>
	}
</div>
