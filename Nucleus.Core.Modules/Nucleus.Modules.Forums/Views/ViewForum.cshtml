@model Nucleus.Modules.Forums.ViewModels.ViewForum
@using Nucleus.Extensions
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Modules.Forums.ViewModels
@Html.AddStyle("~!/../viewer.css")
@Html.AddStyle(AddStyleHtmlHelper.WellKnownScripts.NUCLEUS_FORMS)
@if (Model.Forum != null)
{
	<div class="Forums">
		@using (Html.BeginNucleusForm("SubscribeForum", "Forums", "Forums", FormMethod.Post, new { @autocomplete = "off" }))
		{			
			@Html.HiddenFor(model => model.Forum.Id)
      <a class="btn btn-none" title="Back" href="@Url.PageLink(Model.Page)">
        <span class="nucleus-material-icon">&#xe5e0;</span>
        <h2 class="d-inline-block">@Model.Forum.Name</h2>
      </a>

      <div class="nucleus-form-tools">
				@if (Model.CanPost)
				{
					@Html.LinkButton("", "New post", Url.NucleusAction("AddPost", "Forums", "Forums", new { forumId = Model.Forum.Id }), new { @class = "btn btn-primary btn-sm", @data_target = ".Forums.parent()" })
				}
        @if (!Model.IsSubscribedToForumGroup && Model.CanSubscribe && Model.Subscription == null)
				{
					@Html.SubmitButton("", "Subscribe", Url.NucleusAction("SubscribeForum", "Forums", "Forums"), new { @class = "btn btn-secondary btn-sm", @data_target = ".Forums.parent()" })
				}
				@if (Model.Subscription != null)
				{
					@Html.SubmitButton("", "Un-subscribe", Url.NucleusAction("UnSubscribeForum", "Forums", "Forums"), new { @class = "btn btn-secondary btn-sm", @data_target = ".Forums.parent()" })
				}
        @*@Html.LinkButton("", "Back", Url.PageLink(Model.Page), new { @class="btn btn-secondary btn-sm ms-auto" })*@
			</div>
		}
		@if (Model.Posts != null)
		{
			@using (Html.BeginNucleusForm("ViewForum", "Forums", "Forums", FormMethod.Post, new { @autocomplete = "off", @data_target = ".Forums.parent()" }))
			{
				@await Component.InvokeAsync(typeof(Nucleus.ViewFeatures.Controls.PagingControl), new { model = @Model.Posts, propertyName = "Posts", renderMode = Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Standard })
				@Html.HiddenFor(model => model.Forum.Id)

				<table class="forum-posts table table-sm table-striped">
					<thead>
						<tr>
							<th colspan="1" class="forum-title" scope="col">
								Subject
								@*<button type="submit" class="btn btn-link" formaction="@Url.NucleusAction("ViewForum", "Forums", "Forums", new { @sortkey = "subject", @sortdescending = !Model.SortDescending })">Subject</button>*@
							</th>
							<th class="forum-author">Started By</th>
							<th>
								Replies
								@*<button type="submit" class="btn btn-link" formaction="@Url.NucleusAction("ViewForum", "Forums", "Forums", new { @sortkey = "replycount", @sortdescending = !Model.SortDescending })">Replies</button>*@
							</th>
							<th>
								Most Recent
								@*<button type="submit" class="btn btn-link" formaction="@Url.NucleusAction("ViewForum", "Forums", "Forums", new { @sortkey = "postdate", @sortdescending = !Model.SortDescending })">Most Recent</button>*@
								</th>
						</tr>
					</thead>
					@foreach (var post in Model.Posts.Items)
					{
						<tr>
							<td class="forum-title">
								<a href="@Url.PageLink(Model.Page, @Model.Forum.Name.FriendlyEncode() + $"/{@post.Id}")" class="@(post.Tracking == null ? "d-block fw-bold" : "d-block")">
									<span class="nucleus-material-icon">
										@if (post.IsPinned)
										{
											<span title="Pinned">@Html.Raw("&#xe55f;")</span>
										}
										else if (post.IsLocked)
										{
											<span title="Pinned">@Html.Raw("&#xe897;")</span>
										}
										else if (post.IsRejected == true)
										{
											<span title="Rejected">@Html.Raw("&#xe8db;")</span>
										}
										else if (!post.IsApproved)
										{
											<span title="Awaiting Approval">@Html.Raw("&#xef64;")</span>
										}

									</span>
									@post.Subject
								</a>

								@if (post.Status != null)
								{
									<span class="post-status">@post.Status.Name</span>
								}
							</td>
							<td class="forum-author small compact-cell">
								<div>@(post.PostedBy?.UserName ?? "Deleted User")</div>
								<div>@post.DateAdded.FormatDate(this.Context.Request.GetUserTimeZone())</div>
							</td>
							<td class="compact-cell">@post.Statistics.ReplyCount</td>
							<td class="compact-cell small">
								@if (post.Statistics.LastReply != null)
								{
									<div class="small">@(post.Statistics.LastReply.PostedBy?.UserName ?? "Deleted User")</div>
                  <div class="small">
                    <a href="@Url.PageLink(Model.Page, @Model.Forum.Name.FriendlyEncode() + $"/{@post.Id}")/#_@post.Statistics.LastReply.Id">
                      @post.Statistics.LastReply.DateAdded.FormatDate(this.Context.Request.GetUserTimeZone())
                    </a>
                  </div>
								}
							</td>
						</tr>
					}
				</table>
			}
		}
	</div>
}