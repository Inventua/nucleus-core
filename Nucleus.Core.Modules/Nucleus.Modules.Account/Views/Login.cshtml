@model Nucleus.Modules.Account.ViewModels.Login
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@Html.AddStyle("~/Resources/css/forms.css")
@using (Html.BeginNucleusForm("Login", "Login", "Account", FormMethod.Post, new { data_target = "form.parent()" }))
{
	<fieldset aria-label="Login">
		@if (!String.IsNullOrEmpty(Model.Message))
		{
			<div class="alert alert-warning">@Model.Message</div>
		}
		@Html.HiddenFor(model => model.ReturnUrl)
		@Html.HiddenFor(model => model.ShowVerificationToken)
		<div>
			<label class="nucleus-show-progress nucleus-show-progress-after">
				<span>User name</span>
				<span>@Html.TextBoxFor(model => model.Username, new { @class= Model.ShowVerificationToken ? "" : "nucleus-default-control", @autocorrect = "off", @autocapitalize = "none" })</span>
			</label>
		</div>
		<div>
			<label>
				<span>Password</span>
				<span>@Html.PasswordFor(model => model.Password, new { @value = Model.Password })</span>
			</label>
		</div>

		@if (Model.ShowVerificationToken)
		{
			<div class="alert alert-primary mt-3">
				Please enter the verification code from your welcome e-mail and click Login.
			</div>
			<div class="nucleus-flex-fields">
				<label>
					<span>Verification Token</span>
					<span>@Html.TextBoxFor(model => model.VerificationToken, new { @class= "nucleus-default-control" })</span>
        </label>
        <button type="submit" class="btn btn-secondary btn-sm mt-2" formaction="@Url.NucleusAction("ResendVerificationCode", "Login", "Account")">Send new Verification Code</button>
			</div>
		}

		@if (Model.AllowRememberMe)
		{
			<div>
				<label>
					Remember Me?
					@Html.CheckBoxFor(model => model.RememberMe)
				</label>
			</div>
		}
		<div class="mt-2">
			<button type="submit" class="btn btn-primary nucleus-login" data-target="form.parent()">Login</button>
			<button type="button" onclick="window.location.href='@Url.Content("~/")';" class="btn btn-secondary">Cancel</button>

			@if (Model.AllowUsernameRecovery || Model.AllowPasswordReset)
			{
				@Html.LinkButton("", "Trouble logging in?", @Url.NucleusAction("Index", "Recover", "Account"), false, new 
				{ 
					@class="ms-2", 
					@returnurl = Model.ReturnUrl, 
					@data_target = "form.parent()"
				})
			}
		</div>
	</fieldset>
}
<script>
	jQuery(document).ready(function()
	{
		jQuery(Page).on('ready', function( page, target, data, url, event, status, request )
		{
			jQuery('#@(nameof(Nucleus.Modules.Account.ViewModels.Login.Username))')
			  .siblings('.nucleus-progress-spinner')
				.remove();
		});

		jQuery('.nucleus-login').on('click', function()
		{
      var usernameControl = jQuery('#@(nameof(Nucleus.Modules.Account.ViewModels.Login.Username))');
			
      if (usernameControl.siblings('.nucleus-progress-spinner').length === 0)
      {
        var progress = jQuery('<div class="spinner-border spinner-border-sm text-primary nucleus-progress-spinner ms-2" role="status"/>');
        progress.insertAfter(usernameControl);
      }
		});			
	});
</script>