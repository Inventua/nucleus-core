@model Nucleus.Modules.Sitemap.ViewModels.SitemapSettings
@using Nucleus.ViewFeatures.HtmlHelpers
<h2 class="nucleus-modal-caption">Sitemap Settings</h2>
@using (Html.BeginNucleusForm("Save", "Sitemap", FormMethod.Post, null))
{
<fieldset role="group" class="flex-grow-1" aria-labelledby="heading">	
  <div class="nucleus-flex-fields">
	  <SettingsControl caption="Levels" helptext="Specifies number of levels to show.  Use '0' to show all levels.">
		  @Html.TextBoxFor(model => model.MaxLevels, new { type = "number", min = "0" })
	  </SettingsControl>

    <SettingsControl caption="Direction" helptext="Select whether to render the site map as a vertical or horizontal list.">
		  @Html.DropDownListFor(model => model.Direction, Html.GetEnumSelectList<Nucleus.Modules.Sitemap.Directions>())
	  </SettingsControl>
  </div>

	<SettingsControl caption="Root Page Type" helptext="Select the base page type.">
		@Html.DropDownListFor(model => model.RootPageType, Html.GetEnumSelectList<Nucleus.Modules.Sitemap.RootPageTypes>(), new { @class = "SiteMapRootPageType" })
	</SettingsControl>

	<SettingsControl caption="Selected Page" helptext="Select the base page." class="SiteMapSelectedPage">
		@Html.PageListFor(model => model.RootPageId, Model.Pages)
	</SettingsControl>

	<SettingsControl caption="Show Description?" rendermode="LabelLast" class="inner-inline" helptext="Display the page description.">
		@Html.CheckBoxFor(model => model.ShowDescription, new { @class = "ToggleSwitch" })
	</SettingsControl>
</fieldset>

	<div class="nucleus-form-buttonrow">
		<input type="submit" value="Save Changes" class="btn btn-primary" />
	</div>
}
<script>
	ShowSelectedPageControl();
	jQuery('.SiteMapRootPageType').on('change', ShowSelectedPageControl);

	function ShowSelectedPageControl(e)
	{
		if (jQuery('.SiteMapRootPageType').val() === '@Convert.ToInt32(Nucleus.Modules.Sitemap.RootPageTypes.SelectedPage)')
		{
			jQuery('.SiteMapSelectedPage').show();
		}
		else
		{
			jQuery('.SiteMapSelectedPage').hide();
		}
	}

	// Read the child pages of the item containing the "+" button
	jQuery('.SiteMapSelectedPage').on('click', '.nucleus-get-childpages', function (e)
	{
			// Add a ul to contain the new pages
			Page.LoadPartialContent(e, '@Url.NucleusAction("GetChildPages", "SiteMap", "SiteMap")' + '?id=' + jQuery(this).attr('data-id'), jQuery(this).closest('li'));

			// remove the "+" button
			jQuery(this).remove();
	});

	// Hide the child pages of the item containing the "-" button
	jQuery('.SiteMapSelectedPage').on('click', '.nucleus-hide-childpages', function (e)
	{
		// hide the "-" button
		jQuery(this).removeClass('show');

		// show the "+" button
		jQuery(this).siblings('.nucleus-get-childpages').addClass('show');

		jQuery(this).closest('li').find('ul').remove();
	});
</script>