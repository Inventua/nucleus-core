@model Nucleus.Modules.MultiContent.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<h1 class="nucleus-modal-caption">Multi-Content Settings</h1>

@using (Html.BeginNucleusForm("Settings", "MultiContent", FormMethod.Post))
{
	<Tab>
		<TabItem target="#contents-list" caption="Content" active="true"></TabItem>
		<TabItem target="#settings" caption="Settings"></TabItem>
	</Tab>

	<TabContent>
		<TabPanel id="contents-list" active="true">
			<div class="nucleus-form-tools">
				<div class="btn btn-secondary">
					<label>
						<span class="nucleus-material-icon">&#xe147</span> Add Content
						<input type="submit" class="collapse" formaction="@Url.NucleusAction("Create", "MultiContent", "MultiContent")" data-target="#ContentEditor">
					</label>
				</div>
			</div>

			<div id="multi-content-contentlist">
				@await Html.PartialAsync("_ContentList.cshtml", Model) 
			</div>
		</TabPanel>

		<TabPanel id="settings">
			<fieldset role="group" aria-labelledby="heading">
				<h2>Settings</h2>
				<SettingsControl caption="Layout" helptext="Display layout.">
					@Html.DropDownListFor(model => model.Layout, new SelectList(Model.Layouts), new {  @data_autopostbackevent = "change" })
				</SettingsControl>

				@await Html.PartialAsync($"LayoutSettings/_{Model.Layout}Settings.cshtml") 
				
			</fieldset>
			<div class="nucleus-form-tools">
				@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "MultiContent", "MultiContent"), new { })
			</div>
		</TabPanel>
	</TabContent>
}
<modal id="ContentEditor" title="Edit Content"></modal>