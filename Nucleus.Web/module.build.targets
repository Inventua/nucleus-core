<!--
	Post-build steps for Nucleus plugin builds.  
	
	To use this, add a line to the end of your .csproj file:
	
		<Import Project="$(NUCLEUS_PATH)\NucleusPlugin.build.targets" />			
-->
<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' ToolsVersion="15.0">	
	<Target Name="Messages" AfterTargets="PostBuildEvent">
		<Message Text="ExtensionFolder: $(ExtensionFolder)" Importance="high" />
		<Message Text="Nucleus Path: $(NUCLEUS_PATH)" Importance="high" />
	</Target>
			
	<Target Name="ValidateExtensionFolder" AfterTargets="PostBuildEvent">
		<Warning
			Condition="'$(Configuration)' == 'Debug' AND '$(ExtensionFolder)' == ''"
			Text="The ExtensionFolder property path is not set, your plugin will not be copied." />
	</Target>
	
	<Target Name="ValidateNucleusPath" AfterTargets="PostBuildEvent">
		<Warning 
			Condition="'$(Configuration)' == 'Debug' AND '$(NUCLEUS_PATH)' == ''"
			Text="The %NUCLEUS_PATH% environment path is not set, your plugin will not be copied." />
	</Target>
	
	<!-- 
		Copy module assemblies to the dev environment Nucleus host/extensions/YOURMODULE/bin folder.	This step renames (moves) existing 
		DLLs to _OLD first in order to trigger a restart, this is required because otherwise the DLLs will be "in use"
	  and the copy operation will fail.  The _OLD folder is removed at the last step.
		
		In order for this step to succeed:
		
		- You must have a project property named "ExtensionFolder" defined in your .csproj.  Example:
				<PropertyGroup Label="Nucleus">
					<ExtensionFolder>TextHtml</ExtensionFolder>
				</PropertyGroup>
			
			The Nucleus plugin project template creates this property for you.
			
		- An environment variable specifying the Nucleus host folder named NUCLEUS_PATH must be defined.
		
			The installer creates this environment variable automatically.
	 -->
	<Target Name="GetOutputAssemblies" AfterTargets="PostBuildEvent">
		<ItemGroup>
			<ReferenceAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\ref\*.dll" />
			
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Abstractions.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.ViewFeatures.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Core.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Extensions.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.Common.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.EntityFramework.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.SqlServer.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.Sqlite.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.PostgreSql.dll"></ExcludedAssemblies>
			<ExcludedAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\Nucleus.Data.MySql.dll"></ExcludedAssemblies>
			
			<Message Importance="high" Text="Reference assembles: @(ReferenceAssemblies)" />
			<Message Importance="high" Text="Excluded assembles: @(ExcludedAssemblies)" />
			<AllAssemblies Include="bin\$(Configuration)\$(TargetFramework)\**\*.dll" />
			<OutputAssemblies Include="@(AllAssemblies)" Exclude="@(ReferenceAssemblies);@(ExcludedAssemblies)" />
		</ItemGroup>		
	</Target>
	
	<Target Name="CopyToExtensionsFolder" AfterTargets="PostBuildEvent" Condition="'$(NUCLEUS_PATH)' != '' AND '$(ExtensionFolder)' != '' AND Exists('$(NUCLEUS_PATH)Extensions')">
		<ItemGroup>			
		  <RenameExtensionFiles Include="$(NUCLEUS_PATH)Extensions\$(ExtensionFolder)\**\$(ProjectName)\*.*" />
  	</ItemGroup>

		<RemoveDir Directories="$(NUCLEUS_PATH)\_OLD" />

		<Message Importance="high" Text="Output assembles: @(OutputAssemblies)" />
		
		<Move SourceFiles="@(RenameExtensionFiles)" DestinationFolder="$(NUCLEUS_PATH)_OLD" />
		<Copy SourceFiles="@(OutputAssemblies)" DestinationFolder="$(NUCLEUS_PATH)Extensions\$(ExtensionFolder)\bin\%(RecursiveDir)" Retries="2" />
		<Copy SourceFiles="@(Content)" DestinationFolder="$(NUCLEUS_PATH)Extensions\$(ExtensionFolder)\%(RelativeDir)\%(RecursiveDir)" Retries="2" />
		
		<RemoveDir Directories="$(NUCLEUS_PATH)\_OLD" />
	</Target>

	<Target Name="PackageExtension" AfterTargets="PostBuildEvent" Condition = "'$(Configuration)' == 'Release' AND $(ExtensionFolder) != '' AND $(NUCLEUS_PATH) != '' AND Exists('$(NUCLEUS_PATH)Setup')">		
		<RemoveDir Directories="AppPackage" />

		<Copy SourceFiles="@(OutputAssemblies)" DestinationFolder="AppPackage\bin\%(RecursiveDir)" Retries="2" />
		<Copy SourceFiles="@(Content)" DestinationFolder="AppPackage\%(RelativeDir)\%(RecursiveDir)" Retries="2" />
		<Delete Files="$(ExtensionFolder)_Extension.zip" />
		
		<ZipDirectory SourceDirectory="AppPackage" DestinationFile="$(ExtensionFolder)_Extension.zip" Overwrite="true" />

		<RemoveDir Directories="AppPackage" />

		<Copy SourceFiles="$(ExtensionFolder)_Extension.zip" DestinationFolder="$(NUCLEUS_PATH)\Setup\Extensions\" Retries="2" Condition="$(CopyToDefaultSetup) != false " />
	</Target>
</Project>