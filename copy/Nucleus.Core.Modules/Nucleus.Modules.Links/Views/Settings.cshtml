@model Nucleus.Modules.Links.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<div>
	@using (Html.BeginNucleusForm("Settings", "Admin", "Links", FormMethod.Post, new { @enctype = "multipart/form-data" }))
	{
		<Tab>
			<TabItem target="#link-list" caption="Links" active="true"></TabItem>
			<TabItem target="#links-settings" caption="Settings"></TabItem>
		</Tab>

		<TabContent>
			<TabPanel id="link-list" active="true">
				<div class="Tools">
					<div class="button">
						<label>
							<span class="MaterialIcon">&#xe147</span> Add Link
							<input type="submit" class="Hide" formaction="@Url.NucleusAction("Create", "Admin", "Links")" data-target=".LinksEditor">
						</label>
					</div>
				</div>

				<table class="Links">
					<tr>
						<th>Title</th>
						<th>Description</th>
					</tr>
					@for (int linkCount = 0; linkCount < Model.Links.Count; linkCount++)
					{
						<tr>
							<td>
								@Html.HiddenFor(model => model.Links[linkCount].Id)
								@Model.Links[linkCount].Title
							</td>

							<td>@Model.Links[linkCount].Description</td>
							<td class="SmallIconCell"><input type="submit" formaction="@Url.NucleusAction("Editor", "Admin", "Links")?mid=@Model.ModuleId&id=@Model.Links[linkCount].Id" value="&#xe3c9;" class="MaterialIcon" title="Edit" data-target=".LinksEditor" /></td>
							<td class="SmallIconCell"><input type="submit" formaction="@Url.NucleusAction("Delete", "Admin", "Links")?mid=@Model.ModuleId&id=@Model.Links[linkCount].Id" value="&#xe14c;" class="MaterialIcon DeleteButton" title="Delete" data-target=".LinksEditor" /></td>
							<td class="SmallIconCell">
								@if (linkCount != 0)
								{
									<input type="submit" formaction="@Url.NucleusAction("MoveUp", "Admin", "Links")?mid=@Model.ModuleId&id=@Model.Links[linkCount].Id" value="&#xe5d8;" class="MaterialIcon secondary" title="Move Up" />
								}
							</td>
							<td class="SmallIconCell">
								@if (linkCount < Model.Links.Count - 1)
								{
									<input type="submit" formaction="@Url.NucleusAction("MoveDown", "Admin", "Links")?mid=@Model.ModuleId&id=@Model.Links[linkCount].Id" value="&#xe5db;" class="MaterialIcon secondary" title="Move Down" />
								}
							</td>
						</tr>
					}
				</table>
			</TabPanel>

			<TabPanel id="links-settings">
				<fieldset role="group" aria-labelledby="heading">
					<h2>Settings</h2>
					<div class="Flex">
						<SettingsControl caption="Categories List" helptext="Select the list to use for categories for this module instance.  Lists are managed in the Nucleus Lists manager.">
							@Html.DropDownListFor(model => model.CategoryList.Id, new SelectList(Model.Lists, "Id", "Name"), "(not selected)")
						</SettingsControl>
						<SettingsControl caption="Layout" helptext="Display layout.">
							@Html.DropDownListFor(model => model.Layout, new SelectList(Model.Layouts))
						</SettingsControl>
					</div>

					<div class="Tools">
						@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "Admin", "Links"), new { })
						@if (!String.IsNullOrEmpty(@Model.Message))
						{
							<div class="Message">@Model.Message</div>
						}
					</div>
				</fieldset>

			</TabPanel>
		</TabContent>
	}
	<div class="EditorPopup LinksEditor" data-overlay=".LinksEditorOverlay"></div>
	<div class="LinksEditorOverlay EditorOverlay"></div>
</div>
