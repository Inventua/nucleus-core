@model Nucleus.Modules.Forums.ViewModels.ReplyForumPost
@using Nucleus.Extensions
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Modules.Forums.ViewModels
<div class="Forums">
	@using (Html.BeginNucleusForm("SaveForumPostReply", "Forums", "Forums", FormMethod.Post, new { @autocomplete = "off", @data_target = ".Forums.parent()", @enctype = "multipart/form-data" }))
	{
		<fieldset>
			@Html.HiddenFor(model => model.Forum.Id)
			@Html.HiddenFor(model => model.Post.Id)
			@Html.HiddenFor(model => model.Reply.Id)

			<SettingsControl caption="Original Post">
        <a href="@Url.PageLink(Model.Page, @Model.Forum.Name.FriendlyEncode() + $"/{@Model.Post.Id}")" class="@(Model.Post.Tracking == null ? "d-block fw-bold" : "d-block")">
          @Model.Post.Subject
        </a>
        <div class="original-post body">
          @(new Microsoft.AspNetCore.Html.HtmlString(Model.Post.Body))
				</div>
			</SettingsControl>

			<SettingsControl caption="Reply" helptext="Enter your reply text.">
				@Html.TextAreaFor(model => model.Reply.Body, new { @class = "HtmlEditorControl" })
			</SettingsControl>

			@if (Model.CanAttach)
			{
				<SettingsControl caption="Attachments" helptext="Add/Manage Attachments.">
					<div class="nucleus-flex-fields nucleus-fileselector">
            @await Component.InvokeAsync(typeof(Nucleus.ViewFeatures.Controls.FileUpload), new { ActionName = "AddReplyAttachment", CssClass = "btn btn-secondary" })
					</div>
				</SettingsControl>
			}

			@if (Model.Reply?.Attachments?.Any() == true)
			{
				<table>
					@for (var attachmentCount = 0; attachmentCount < Model.Reply.Attachments.Count; attachmentCount++)
					{
						<tr>
							<td>
								@Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].Id)
								@Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Id)
								@Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Provider)
								@Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Path)
								@Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Name)
								<a href="@Url.FileLink(Model.Reply.Attachments[attachmentCount].File)" alt="@Model.Reply.Attachments[attachmentCount].File.Name">
									@Model.Reply.Attachments[attachmentCount].File.Name
								</a>
							</td>

							@if (Model.CanAttach)
							{
								<td class="nucleus-small-cell">
                  <input type="submit" title="Delete Attachment" value="&#xe14c;" class="nucleus-material-icon btn btn-danger-secondary btn-sm" formaction="@Url.NucleusAction("DeleteReplyAttachment", "Forums", "Forums")?id=@Model.Reply.Attachments[attachmentCount].Id" data-target=".Forums.parent()" data-confirm="Delete this attachment?" />
								</td>
							}

						</tr>
					}
				</table>
			}
		</fieldset>

		<div class="nucleus-form-tools">
      <input type="submit" formaction="@Url.NucleusAction("SaveForumPostReply", "Forums", "Forums")" value="Save" class="btn btn-primary" data-target=".Forums.parent()" />
      @Html.LinkButton("", "Back", Url.PageLink(Model.Page, @$"{Model.Forum.Name.FriendlyEncode()}/{(Model.Post.Id == Guid.Empty ? "" : Model.Post.Id)}"), new { @class="btn btn-secondary" })
		</div>
	}
	</div>

	<script>
		jQuery('.HtmlEditorControl').HtmlEditor({isAdminMode: false});
	</script>
