@model Nucleus.Modules.FilesList.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<h1 class="nucleus-modal-caption">File List Settings</h1>
@using (Html.BeginNucleusForm("Settings", "FilesListSettings", "FilesList", FormMethod.Post, new { @enctype = "multipart/form-data", @data_target = "form.parent()" }))
{
	<fieldset role="group" aria-labelledby="heading">
		<h2 class="nucleus-control-panel-heading">Settings</h2>
		<SettingsControl caption="Selected Folder" helptext="Select the source folder for the list of files to be displayed.">
			<div class="nucleus-flex-fields nucleus-fileselector">
				@await Component.InvokeAsync(typeof(Nucleus.ViewFeatures.Controls.FolderSelector), new { model = Model.SelectedFolder })
			</div>
		</SettingsControl>
      			
		<SettingsControl caption="Layout" helptext="Display layout.">
			@Html.DropDownListFor(model => model.Layout, new SelectList(Model.Layouts))
		</SettingsControl>

		<div class="files-list-settings-showcolumns mt-3">
			<SettingsControl caption="Show Modified Date?" helptext="Specifies whether to display the file last modified date." class="inner-inline">
				@Html.CheckBoxFor(model => model.ShowModifiedDate, new { @class = "ToggleSwitch" })
			</SettingsControl>

			<SettingsControl caption="Show Size?" helptext="Specifies whether to display the file size." class="inner-inline">
				@Html.CheckBoxFor(model => model.ShowSize, new { @class = "ToggleSwitch" })
			</SettingsControl>

			<SettingsControl caption="Show Dimensions?" helptext="Specifies whether to display the dimensions of image files." class="inner-inline">
				@Html.CheckBoxFor(model => model.ShowDimensions, new { @class = "ToggleSwitch" })
			</SettingsControl>
		</div>

	</fieldset>

	<div class="nucleus-form-buttonrow">
		@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "FilesListSettings", "FilesList"), new { })
	</div>
}
