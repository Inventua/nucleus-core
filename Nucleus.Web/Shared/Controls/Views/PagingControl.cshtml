@model Nucleus.ViewFeatures.ViewModels.PagingControl
@Html.AddStyle("~!PagingControl.css")
@if (@Model.Results == null || @Model.Results.TotalCount <= 0)
{
	@Html.HiddenFor(model => model.Results.PageSize)
}
else
{
	<div class="nucleus-paging-control @Model.RenderMode.ToString().ToLower()">
		@if (Model.Results.Pages.Count > 1)
		{
			<div class="nucleus-pagingcontrol-left">
				<span class="nucleus-paging-control-summary">Page @Model.Results.CurrentPageIndex of @Model.Results.TotalPages</span>
				@if (Model.RenderMode == Nucleus.ViewFeatures.ViewModels.PagingControl.RenderModes.Standard)
				{
					<a class="btn nucleus-material-icon nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" data-page="1">&#xe5dc;</a>
					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == 1 ? " disabled" : "")" data-page="@(Model.Results.CurrentPageIndex - 1)">Previous</a>

					@foreach (int pageNumber in Model.Results.PageControlNumbers)
					{						
						<a class="btn nucleus-pagingcontrol-pagebutton@(pageNumber == Model.Results.CurrentPageIndex ? " Current" : "")" data-page="@pageNumber">@pageNumber</a>
					}

					@if (Model.Results.PageControlNumbers.Last() != Model.Results.TotalPages)
					{
						<span>...</span>
						<a class="btn nucleus-pagingcontrol-pagebutton" data-page="@Model.Results.TotalPages">@Model.Results.TotalPages</a>
					}

					<a class="btn nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" data-page="@(Model.Results.CurrentPageIndex + 1)">Next</a>
					<a class="btn nucleus-material-icon nucleus-pagingcontrol-pagebutton@(Model.Results.CurrentPageIndex == Model.Results.TotalPages ? " disabled" : "")" data-page="@Model.Results.TotalPages">&#xe5dd;</a>
				}
			</div>

			@Html.DropDownList(Model.PropertyName + ".CurrentPageIndex", new SelectList(Model.Results.Pages, "Key", "Value", Model.Results.CurrentPageIndex), new { @class = "nucleus-pagingcontrol-pagedropdown", @title = "Select Page", @data_autopostbackevent = "change" })
		}
		<label class="nucleus-pagingcontrol-pagesizelabel">Page Size:</label>
		@Html.DropDownList(Model.PropertyName + ".PageSize", new SelectList(Model.Results.PageSizes, Model.Results.PageSize), new { @class = "nucleus-pagingcontrol-pagesizedropdown", @title = "Page Size" })
	</div>
}

<script>
	jQuery(document).ready(function()
	{
		jQuery(document).on('click', '.nucleus-paging-control [data-page]:not(.disabled)', function (event)
		{
			/* handle controls with a data-page attribute (the numbered page buttons and the first/last/prev/next buttons) */
			jQuery(this).parents('.nucleus-paging-control').find('.nucleus-pagingcontrol-pagedropdown').val(jQuery(event.currentTarget).attr('data-page'));
			event.preventDefault();
			event.stopImmediatePropagation();
			jQuery(this).parents('form').submit();	
		});

		jQuery(document).on('change', '.nucleus-pagingcontrol-pagesizedropdown', function(event) 
		{
			/* Reset current page to zero when the user changes the page size */
			jQuery(this).parent('.nucleus-paging-control').find('.nucleus-pagingcontrol-pagedropdown').val('1');
			event.preventDefault();
			event.stopImmediatePropagation();
			jQuery(this).parents('form').submit();	
			
		});
	});

</script>