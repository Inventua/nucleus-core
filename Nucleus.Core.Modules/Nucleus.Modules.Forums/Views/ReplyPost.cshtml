@model Nucleus.Modules.Forums.ViewModels.ReplyForumPost
@using Nucleus.Extensions
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Modules.Forums.ViewModels
@addTagHelper "*, Nucleus.ViewFeatures"
<div class="forums">
  @using (Html.BeginNucleusForm("SaveForumPostReply", "Forums", "Forums", FormMethod.Post, new { @autocomplete = "off", @data_target = ".forums.parent()", @enctype = "multipart/form-data" }))
  {
    <fieldset class="reply">
      @Html.HiddenFor(model => model.Forum.Id)
      @Html.HiddenFor(model => model.Post.Id)
      @Html.HiddenFor(model => model.Reply.Id)

      @if (Model.Reply.ReplyTo != null)
      {
        @Html.HiddenFor(model => model.Reply.ReplyTo.Id)
      }

      <div class="d-flex flex-row">
        <a title="Back" href="@Url.PageLink(Model.Page, @Model.Forum.Name.FriendlyEncode() + $"/{@Model.Post.Id}")" class="d-block btn btn-none flex-1 text-start" )">
          <span class="nucleus-material-icon">&#xe5e0;</span>
          <h3 class="d-inline-block post-title">@Model.Post.Subject</h3>
        </a>
        <button type="button" class="btn btn-none nucleus-material-icon ms-auto view-post-dialog">&#xf1ce;</button>
      </div>
      <div class="original-post">
        <div class="post-body">
          @if (Model.Reply.ReplyTo != null)
          {
            @(new Microsoft.AspNetCore.Html.HtmlString(Model.Reply.ReplyTo.Body))
          }
          else
          {
            @(new Microsoft.AspNetCore.Html.HtmlString(Model.Post.Body))
          }
        </div>
      </div>

      @if (Model.CanAttach || Model.Reply?.Attachments?.Any() == true)
      {
        <div class="attachments mt-1 settings-control align-items-center">
          @if (Model.CanAttach)
          {
            <div class="nucleus-flex-fields nucleus-fileselector">
              @await Component.InvokeAsync(typeof(Nucleus.ViewFeatures.Controls.FileUpload), new { Text = "Add Attachment", Folder = Model.AttachmentsFolder, ActionName = "AddReplyAttachment", CssClass = "btn btn-sm btn-secondary" })
            </div>
          }
          @if (Model.Reply?.Attachments?.Any() == true)
          {
            @for (var attachmentCount = 0; attachmentCount < Model.Reply.Attachments.Count; attachmentCount++)
            {
              @Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].Id)
              @Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Id)
              @Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Provider)
              @Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Path)
              @Html.HiddenFor(attachment => Model.Reply.Attachments[attachmentCount].File.Name)
              <a href="@Url.FileLink(Model.Reply.Attachments[attachmentCount].File)" title="@Model.Reply.Attachments[attachmentCount].File.Name">
                <span class="icon nucleus-material-icon">&#xe873;</span>
                @Model.Reply.Attachments[attachmentCount].File.Name

                @if (Model.CanAttach)
                {
                  <input type="submit" title="Delete Attachment" value="&#xe14c;" class="nucleus-material-icon btn btn-none btn-sm" formaction="@Url.NucleusAction("DeleteReplyAttachment", "Forums", "Forums")?id=@Model.Reply.Attachments[attachmentCount].Id" data-target=".forums.parent()" data-confirm="Delete this attachment?" />
                }
              </a>
            }
          }
        </div>
      }
      <SettingsControl caption="Reply" helptext="Enter your reply text.">
        @Html.TextAreaFor(model => model.Reply.Body, new { @class = "HtmlEditorControl" })
      </SettingsControl>

    </fieldset>

    <div class="nucleus-form-tools">
      <input type="submit" formaction="@Url.NucleusAction("SaveForumPostReply", "Forums", "Forums")" value="Save" class="btn btn-primary nucleus-show-progress nucleus-show-progress-after-last-sibling" data-target=".forums.parent()" />
      @Html.LinkButton("", "Cancel", Url.PageLink(Model.Page, @$"{Model.Forum.Name.FriendlyEncode()}/{(Model.Post.Id == Guid.Empty ? "" : Model.Post.Id)}"), new { @class="btn btn-secondary" })
    </div>
  }
</div>
<modal id="original-post-dialog" modal-class="modal-auto-size modal-dialog-scrollable modal-dialog-content-border" use-admin-styles="false" render-footer="true"></modal>
<script>
  jQuery('.HtmlEditorControl').HtmlEditor({ isAdminMode: false });

  jQuery('.view-post-dialog').on('click', function () 
  { 
    jQuery('#original-post-dialog .modal-title').text(jQuery('.post-title').text());
    jQuery('#original-post-dialog .modal-body').html(jQuery('.post-body').html());
    if (jQuery('#original-post-dialog .modal-footer .modal-close-button').length === 0)
    {
      var closeButton = '<button type="button" class="btn btn-primary modal-close-button" data-bs-dismiss="modal">Close</button>';
      jQuery('#original-post-dialog .modal-footer').append(closeButton);
    }
    jQuery('#original-post-dialog').modal('show');
    //Page.Dialog(jQuery('.post-title').text(), jQuery('.post-body').html(), '', 'Close', null, null, true);
  });  
</script>
