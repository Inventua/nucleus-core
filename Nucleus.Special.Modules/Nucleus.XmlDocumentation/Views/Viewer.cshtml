@model Nucleus.XmlDocumentation.ViewModels.Viewer
@using Nucleus.Abstractions
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.XmlDocumentation.ViewModels

@Html.AddStyle("~!/../viewer.css")
<div class="XmlDocumentation">
	@if (!String.IsNullOrEmpty(Model.Message))
	{
		<div class="alert alert-warning" role="alert">@Model.Message</div>
	}
	else
	{
		<div class="api-wrapper">
			<div class="api-menu">
				<nav class="accordion">
					<div class="accordion-item">
						@foreach (var document in Model.Documents)
						{
							<h2 id="asm-@document.Namespace.ControlId()" class="accordion-header">
								<button class="accordion-button@(Model.DefaultOpen || Model.SelectedDocument==document ? "": " collapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#mnu-@document.Namespace.ControlId()" aria-expanded="@(Model.DefaultOpen || Model.SelectedDocument==document ? "true": "false")" aria-controls="mnu-@document.Namespace.ControlId()">
									@document.AssemblyName
								</button>
							</h2>

							<div id="mnu-@(document.Namespace.ControlId())" class="list-group accordion-collapse collapse @(Model.DefaultOpen || Model.SelectedDocument==document ? "show" : "")">
								<a class="list-group-item assembly-landing" href="@Url.PageLink(Model.Page, $"{@document.SourceFileName}/#asm-{document.Namespace.ControlId()}")">@document.AssemblyName Assembly</a>

								<ul>
									@foreach (var apiClass in document.Classes)
									{
										<li><a id="mnu-@(apiClass.ControlId())" class="list-group-item @(apiClass.FullName==Model.SelectedClass?.FullName ? "active" : "")" href="@Url.PageLink(Model.Page, $"{document.SourceFileName}/{apiClass.FullName}/#mnu-{apiClass.ControlId()}")">@apiClass.Name</a></li>
									}
								</ul>
							</div>
						}
					</div>
				</nav>
			</div>
			<div class="api-content">
				@if (Model.SelectedDocument == null)
				{
					// no document selected, show "landing"" page
					foreach (var document in Model.Documents)
					{
						<h2><a href="@Url.PageLink(Model.Page, @document.SourceFileName)">@document.Namespace.Name Assembly</a></h2>
						if (document.Namespace.Summary != null)
						{
							<div class="api-remarks">
								@await Html.PartialAsync("_RenderMixedContent.cshtml", new MixedContent (Model.Page, document.Namespace.Summary))
							</div>
						}
					}
				}
				else
				{
					if (Model.SelectedClass != null)
					{
						// Class page
						@await Html.PartialAsync("_RenderClass.cshtml", new ApiClass(Model.Page, Model.SelectedClass))
					}
					else if (Model.SelectedDocument != null)
					{
						// Assembly contents page
						<h2>@Model.SelectedDocument.Namespace.Name</h2>
						@if (Model.SelectedDocument.Namespace.Summary != null)
						{
							<div class="api-summary">
								@await Html.PartialAsync("_RenderMixedContent.cshtml", new MixedContent (Model.Page, Model.SelectedDocument.Namespace.Summary))
							</div>
						}
						@if (Model.SelectedDocument.Namespace.Remarks != null)
						{
							<div class="api-remarks">
								<h3>Remarks</h3>
								<div>
									@await Html.PartialAsync("_RenderMixedContent.cshtml", new MixedContent (Model.Page, Model.SelectedDocument.Namespace.Remarks))
								</div>
							</div>
						}
						@if (Model.SelectedDocument.Namespace.Examples != null)
						{
							<div class="api-examples">
								<h3>Examples</h3>
								@foreach (var example in Model.SelectedDocument.Namespace.Examples)
								{
									<code>@example</code>
								}
							</div>
						}

						<nav>
							<h2>Classes</h2>
							<ul class="list-group">
								@foreach (var apiClass in Model.SelectedDocument.Classes)
								{
									<li class="list-group-item">
										<a class="list-group-item-action" href="@Url.PageLink(Model.Page, $"{Model.SelectedDocument.SourceFileName}/{apiClass.FullName}/#mnu-{@apiClass.ControlId()}"))">@apiClass.Name @(apiClass.Type == Nucleus.XmlDocumentation.Models.ApiMember.MemberTypes.Interface ? "Interface" : "Class")</a>
										<div>
											@await Html.PartialAsync("_RenderMixedContent.cshtml", new MixedContent (Model.Page, apiClass.Summary))
										</div>
									</li>
								}
							</ul>
						</nav>
					}
				}

			</div>

		</div>
	}
</div>

<script type="text/javascript">
	jQuery(document).ready(function()
	{
		var menuItem = jQuery('#mnu-@Model.SelectedClass?.ControlId()').first();
		if (menuItem.length !== 0)
		{
			menuItem[0].scrollIntoView({ block: "center", inline: "nearest" } );
		}
		jQuery('.list-group.accordion-collapse').on('show.bs.collapse', function ()
		{
			var href = jQuery(this).children('.assembly-landing').first().attr('href');
			document.location=href;
			return false;
		});
	});
</script>