@model Nucleus.OAuth.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<div>
	@using (Html.BeginNucleusForm("Settings", "OAuth", FormMethod.Post, new { @enctype = "multipart/form-data" }))
	{
		<fieldset role="group" aria-labelledby="heading">
			<h2>Settings</h2>
			<div class="nucleus-flex-fields">
				<SettingsControl caption="Match by name" helptext="Specifies whether to match existing users matching the name supplied by the OAuth provider.">
					@Html.TextBoxFor(model => model.MatchByName)
				</SettingsControl>

				<SettingsControl caption="Match by email" helptext="Specifies whether to match existing users matching the email supplied by the OAuth provider.">
					@Html.TextBoxFor(model => model.MatchByEmail)
				</SettingsControl>
			</div>

			<div class="nucleus-flex-fields">
				<SettingsControl caption="Create Users" helptext="Specifies whether to create a new user if no matching user was found.">
					@Html.TextBoxFor(model => model.CreateUsers)
				</SettingsControl>

				<SettingsControl caption="Automatically Approve New Users" helptext="Specifies whether to override site settings and automatically mark users created with OAuth provider data as approved.">
					@Html.TextBoxFor(model => model.AutomaticallyApproveNewUsers)
				</SettingsControl>

				<SettingsControl caption="Automatically Verify New Users" helptext="Specifies whether to override site settings and automatically mark users created with OAuth provider data as verified.">
					@Html.TextBoxFor(model => model.AutomaticallyVerifyNewUsers)
				</SettingsControl>
			</div>

			<div class="Tools">
				@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "OAuth", "OAuth"), new { })				
			</div>
		</fieldset>
	}
</div>
