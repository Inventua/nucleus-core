@model Nucleus.Web.ViewModels.Admin.FileSystem
@using Nucleus.Abstractions.Models.FileSystem
@using Nucleus.ViewFeatures
@using Nucleus.Extensions;
@using Nucleus.Abstractions.FileSystemProviders
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
<div class="FileSystemManager">
	<h2 class="nucleus-control-panel-heading">Files</h2>

	@using (Html.BeginAreaForm("Index", "FileSystem", "Admin", FormMethod.Post, new { @data_target = ".nucleus-adminpage", @enctype = "multipart/form-data" }))
	{
		<div class="nucleus-form-tools flex">
			@Html.DropDownListFor(model => model.SelectedProviderKey, new SelectList(Model.Providers, nameof(FileSystemProviderInfo.Key), nameof(FileSystemProviderInfo.Name)), "(select)", new { @class = "providerKey nucleus-default-control" })
			<span>@Model.Folder.Name</span>
		</div>
		@Html.HiddenFor(model => model.SelectedProviderKey)
		@Html.HiddenFor(model => model.Folder.Id)

		<div class="nucleus-form-tools">
			@if (!String.IsNullOrEmpty(Model.Folder.Path))
			{
				@Html.LinkButton("&#xe5c4;", "Back", @Url.AreaAction("Index", "FileSystem", "Admin", new { folderId = Model.Folder.Parent.Id }), new { @data_target = ".nucleus-adminpage", @class = "btn btn-secondary" })
			}
			@Html.AreaActionLink("Create Folder", "ShowCreateFolderDialog", "FileSystem", "Admin", new { folderId = Model.Folder.Id }, new { @class = "btn btn-secondary", @data_target = "#nucleus-popupdialog .modal-body" })
			@if (Model.Folder.Capabilities.CanStoreFiles)
			{
				<div class="FileBrowser BrowseFile btn btn-secondary">
					<label>
						<span class="nucleus-material-icon">&#xe2c6</span> Upload File
						<input type="file" name="mediaFile" class="collapse" formaction="@Url.AreaAction("UploadFile", "FileSystem", "Admin")">
					</label>
				</div>
			}
			else
			{
				<button type="button" class="btn btn-secondary" aria-disabled="true" disabled>Upload File</button>
			}
			@if (Model.EnableDelete)
			{
				@Html.SubmitButton("", "Delete", @Url.AreaAction("ShowDeleteDialog", "FileSystem", "Admin"), new { @data_target = "#nucleus-popupdialog .modal-body", @class = "btn btn-danger" })
			}
			@if (Model.EnableRename)
			{
				@Html.SubmitButton("", "Rename", @Url.AreaAction("ShowRenameDialog", "FileSystem", "Admin"), new { @data_target = "#nucleus-popupdialog .modal-body", @class = "btn btn-secondary" })
			}
			@Html.SubmitButton("&#xe897;", "Folder Settings", @Url.AreaAction("EditFolderSettings", "FileSystem", "Admin", new { folderId = Model.Folder.Id }), new { @data_target = "#nucleus-popupdialog .modal-body", @class = "btn btn-secondary" })
		</div>

		<div>
			<div class="UploadProgress">
				<div>
					<span class="nucleus-material-icon">&#xe2c6</span> Uploading file ...
				</div>
				<div class="progress">
					<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
				</div>
			</div>

			<table class="FileSystemItems">
				<tr>
					<th />
					<th>Name</th>
					<th>Type</th>
					<th>Modified Date</th>
					<th>Size</th>
				</tr>

				@for (var folderCount = 0; folderCount < Model.Folder?.Folders.Count; folderCount++)
				{
					<tr>
						<td>
							@if (Model.Folder.Folders[folderCount].Capabilities.CanRename || Model.Folder.Folders[folderCount].Capabilities.CanDelete)
							{
								@Html.CheckBoxFor(model => model.Folder.Folders[folderCount].IsSelected, new { @class = "nucleus-filesystem-folderselector" })
							}
							@Html.HiddenFor(model => model.Folder.Folders[folderCount].Id)
						</td>
						<td>
							@Html.AreaActionLink(Model.Folder.Folders[folderCount].Name, "Index", "FileSystem", "Admin", new { folderId = @Model.Folder.Folders[folderCount].Id }, new { @class = "NavigateLink", @data_target = ".nucleus-adminpage" })
						</td>
						<td>Folder</td>
						<td>@Model.Folder.Folders[folderCount].DateModified.FormatDate(this.Context.Request.GetUserTimeZone())</td>
						<td />
					</tr>
				}

				@for (var fileCount = 0; fileCount < Model.Folder?.Files.Count; fileCount++)
				{
					<tr>
						<td>
							@Html.CheckBoxFor(model => model.Folder.Files[fileCount].IsSelected, new { @class = "nucleus-filesystem-fileselector" })
						</td>
						<td>
							@Model.Folder.Files[fileCount].Name
							@Html.HiddenFor(model => model.Folder.Files[fileCount].Id)
						</td>
						<td>File</td>
						<td>@Model.Folder.Files[fileCount].DateModified.FormatDate(this.Context.Request.GetUserTimeZone())</td>
						<td>@((Model.Folder.Files[fileCount] as File).Size.FormatFileSize())</td>
					</tr>
				}
			</table>
		</div>
	}
</div>

<script type="text/javascript">
	jQuery('.providerKey').on('change', function ()
	{
		jQuery(this).parents('form').submit();
	});

</script>
