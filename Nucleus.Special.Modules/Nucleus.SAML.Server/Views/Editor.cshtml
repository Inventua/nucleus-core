@model Nucleus.SAML.Server.ViewModels.Settings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
@using (Html.BeginNucleusForm("Settings", "SAMLServerAdmin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
	<fieldset role="group" aria-labelledby="heading">
		<h2>Settings</h2>
		@Html.HiddenFor(model => model.ClientApp.Id)	

		<SettingsControl caption="Title" helptext="Enter a title for this client app.  This value is displayed in the administration user interface, and is for your reference.">
			@Html.TextBoxFor(model => model.ClientApp.Title)
		</SettingsControl>

		<SettingsControl caption="SP Allowed Issuer" helptext="Enter the allowed SAML (service provider) request issuer name.">
			@Html.TextBoxFor(model => model.ClientApp.AllowedIssuer)
		</SettingsControl>

		<SettingsControl caption="SP Metadata Url" helptext="Enter the metadata Url for the service provider (client).  If you leave this value blank, the service provider (relying party) will not be validated.">
			@Html.TextBoxFor(model => model.ClientApp.ServiceProviderMetadataUrl)
		</SettingsControl>

		<SettingsControl caption="IdP Signing Certificate" helptext="Enter the path for your signing certificate.">
			@Html.TextBoxFor(model => model.ClientApp.SigningCertificateFile)
		</SettingsControl>

		<SettingsControl caption="IdP Signing Certificate Password" helptext="Enter the password for your signing certificate.">
			@Html.TextBoxFor(model => model.ClientApp.SigningCertificatePassword)
		</SettingsControl>

		<SettingsControl caption="SP Signature Validation Certificate" helptext="Enter the path for your signature validation certificate.  This is the certificate used to validate messages from the service provider.">
			@Html.TextBoxFor(model => model.ClientApp.SignatureValidationCertificateFile)
		</SettingsControl>

		<SettingsControl caption="Token Lifetime (minutes)" helptext="SAML2 token lifetime in minutes. ">
			@Html.TextBoxFor(model => model.ClientApp.TokenExpiryMinutes)
		</SettingsControl>

		<SettingsControl caption="Login Page" helptext="Login Page for this client App.  Leave this set to 'Site Default' if you want to use the configured login page for this site, or select a custom login page for the Client App.">
			@Html.PageListFor(model => model.ClientApp.LoginPage, Model.Pages, Guid.Empty, "(site default)", new {})
		</SettingsControl>
	</fieldset>

	<div class="Tools">
		@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSettings", "SAMLServerAdmin", "SAMLServer"), new { @data_target = ".nucleus-admin-content" })				
	</div>
}

<script>
	$(document).ready(function() 
	{
		
		// Read the child pages of the item containing the "+" button
		jQuery('.nucleus-page-list').on('click', '.nucleus-get-childpages', function (e)
		{
			// Add a ul to contain the new pages
			Page.LoadPartialContent(e, '@Url.NucleusAction("GetChildPages", "SAMLServerAdmin", "SAMLServer")' + '?id=' + jQuery(this).attr('data-id'), jQuery(this).closest('li'));

			// hide the "+" button
			jQuery(this).removeClass('show');

		});
				
		// Hide the child pages of the item containing the "-" button
		jQuery('.nucleus-page-list').on('click', '.nucleus-hide-childpages', function (e)
		{
			// hide the "-" button
			jQuery(this).removeClass('show');

			// show the "+" button
			jQuery(this).siblings('.nucleus-get-childpages').addClass('show');

			jQuery(this).closest('li').find('ul').remove();
		});
	});



</script>
