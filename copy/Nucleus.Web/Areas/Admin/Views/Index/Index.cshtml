@model Nucleus.Web.ViewModels.Admin.Index
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Abstractions
<!DOCTYPE html>
<html lang="en">
<head>
	<meta name="viewport" content="width=device-width" />
	<meta charset="utf-8">
	<title>Nucleus Admin</title>
	@Html.AddHtmlEditor()
	<link href="@Url.Content("~/Resources/Libraries/Bootstrap/5.1.0/css/bootstrap.css")" rel="stylesheet" />
	<link href="@Url.Content("~/Resources/css/shared.css")" rel="stylesheet" />
	<link href="@Url.Content("~/Resources/css/admin.css")" rel="stylesheet" />
	<link href="@Url.Content("~/Resources/css/forms.css")" rel="stylesheet" />
	<link href="@Url.Content("~/Resources/css/editmode.css")" rel="stylesheet" />
	@Html.RenderStyles()
	<script src="@Url.Content("~/Resources/Libraries/jQuery/03.06.00/jquery.min.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Resources/Libraries/Bootstrap/5.1.0/js/bootstrap.bundle.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Resources/js/jquery-toggleswitch.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Resources/js/nucleus-shared.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Resources/js/nucleus-admin.js")" type="text/javascript"></script>
	@Html.RenderScripts()
</head>
<body>
	<div class="Nucleus AdminPanel">
		<ul class="MinimizedControls">
			@if (Model.IsSiteAdmin)
			{
				<li data-target=".AdminPage" class="SystemIcon">
					<a title="System" href="@Url.Content("~/Admin/System/Index")"><span>&#xe871;</span></a>
					<span class="Label">System</span>
				</li>
				<li data-target=".AdminPage" class="PagesIcon">
					<a title="Pages" class="Pages" href="@Url.Content("~/Admin/Pages/Index")"><span>&#xef42;</span></a>
					<span class="Label">Pages</span>
				</li>
				<li data-target=".AdminPage" class="ManageIcon">
					<a title="Manage" class="Manage" href="@Url.Content("~/Admin/Manage/Index")"><span>&#xf02e;</span></a>
					<span class="Label">Manage</span>
				</li>
			}
			@if (Model.IsSystemAdministrator)
			{
				<li data-target=".AdminPage" class="ExtensionsIcon">
					<a title="Extensions" class="Extensions" href="@Url.Content("~/Admin/Extensions/Index")"><span>&#xe87b;</span></a>
					<span class="Label">Extensions</span>
				</li>
				<li data-target=".AdminPage" class="SettingsIcon">
					<a title="Settings" class="Settings" href="@Url.Content("~/Admin/Settings/Index")"><span>&#xe8b8;</span></a>
					<span class="Label">Settings</span>
				</li>
			}

			@if (Model.CanEdit)
			{
				<li class="EditIcon EditPage">
					<a title="Edit Page" class="EditPageButton" href="@Url.Content("~/Admin/Pages/Editor")?id=@Model.CurrentPage.Id" data-target=".AdminPage"><span>&#xef42;</span></a>
					<span class="Label">Edit Page Settings</span>
				</li>

				<li class="EditIcon EditContent @(Model.IsEditMode ? "EditModeEnabled" : "")">
					<a title="Edit Content" class="EditContentButton" href="@Url.Content("~/Admin/Settings/Index")"><span>&#xe3c9;</span></a>
					<span class="Label">Edit Content</span>
				</li>
			}
		</ul>

		<div class="AdminContent">
			<div class="AdminContentControls">
				<a class="CloseAdminFrame">&#xe5cd;</a>
				<a class="AdminPageBack PageBackButton" data-target=".AdminPage">&#xe5c4;</a>
			</div>
			<div class="AdminPage"></div>
		</div>
	</div>

	<script type="text/javascript">

		// Open/close (expand) the admin frame when the user clicks an icon
		jQuery('.Nucleus.AdminPanel .MinimizedControls LI').on('click', AdminMenuItem_Click);

		// Close the admin frame when the user clicks the close button at the top-right
		jQuery('.Nucleus.AdminPanel .CloseAdminFrame').on('click', function () { ShowAdminFrame(false, ''); return false; });

		// Close the module editor 'popup' when the user clicks the close button at the top-right
		jQuery('.Nucleus.AdminPanel').on('click', '.ClosePopup', function ()
		{
			jQuery('.EditorPopup, .EditorOverlay').hide();
			jQuery('.EditorPopup').html('');
		});

		// Edit button handler (toggle edit mode)
		@if (Model.CanEdit)
		{
			@:jQuery('.Nucleus.AdminPanel .EditContentButton').on('click', ToggleEditMode);
		}

		// Set the target to .ModuleEditor for the module edit view 'save' button, controller methods generally return no content
		//jQuery('.Nucleus.AdminPanel').on('click', '.ModuleEditor input[type=submit]', function () { jQuery(this).attr('data-target', '.ModuleSettings') });
		function AdminMenuItem_Click(event)
		{
			var url = jQuery(event.currentTarget).find('A').attr('href');

			if (jQuery('.AdminPage').data("src") === url)
			{
				ShowAdminFrame(false, '');
				// Return false to prevent content load when we are closing the admin frame
				return false;
			}
			else
			{
				ShowAdminFrame(true, url);
				// Don't return false, we want the event handler in nucleus-shared.js to execute after this
			}
		}

		function ShowAdminFrame(show, url)
		{
			window.parent.document.dispatchEvent(new CustomEvent('ExpandAdminFrame', { detail: { expand: show } }));
			jQuery('.AdminPage').data('src', url);

			if (show)
			{
				// show
				jQuery('.Nucleus.AdminPanel .AdminContent').css('opacity', 1).css('display', 'inline-block');
			}
			else
			{
				// hide
				jQuery('.Nucleus.AdminPanel .AdminContent').css('opacity', 0).hide();
				Reload();
			}
		}



		function ToggleEditMode()
		{
			Reload(!Page.GetCookie('@(Constants.EDIT_COOKIE_NAME)'));
			return false;
		}

		function Reload(setEditMode)
		{
			window.parent.document.dispatchEvent(new CustomEvent('Refresh', { detail: { setEditMode: setEditMode } }));
		}
	</script>

</body>

</html>