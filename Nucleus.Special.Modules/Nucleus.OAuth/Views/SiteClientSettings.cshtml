@model Nucleus.OAuth.Client.Client.ViewModels.SiteClientSettings
@addTagHelper "*, Nucleus.ViewFeatures"
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models
@Html.AddStyle("~!/../settings.css")
<div>
	@using (Html.BeginNucleusForm("SaveSettings", "OAuthClientAdmin", "OAuth", FormMethod.Post, new { @enctype = "multipart/form-data" }))
	{
		<fieldset role="group" aria-labelledby="heading">
			<h2 class="nucleus-control-panel-heading">OAuth Client Settings</h2>

			<div class="nucleus-flex-fields">
				<SettingsControl caption="Match by name" class="inner-inline" rendermode="LabelLast" helptext="Specifies whether to match existing users matching the name supplied by the OAuth provider.">
					@Html.CheckBoxFor(model => model.MatchByName, new { @class = "ToggleSwitch" })
				</SettingsControl>

				<SettingsControl caption="Match by email" class="inner-inline" rendermode="LabelLast" helptext="Specifies whether to match existing users matching the email supplied by the OAuth provider.">
					@Html.CheckBoxFor(model => model.MatchByEmail, new { @class = "ToggleSwitch" })
				</SettingsControl>
			</div>

			<SettingsControl caption="Create a New User if no Matching User is Found" class="inner-inline" rendermode="LabelLast" helptext="Specifies whether to create a new user if no matching user was found.">
				@Html.CheckBoxFor(model => model.CreateUsers, new { @class = "nucleus-oauth-create-user-control ToggleSwitch" })
			</SettingsControl>

			<div class="nucleus-flex-fields nucleus-oauth-create-user-controls">
				<SettingsControl caption="Automatically Approve New Users" class="inner-inline" rendermode="LabelLast" helptext="Specifies whether to override site settings and automatically mark users created with OAuth provider data as approved.">
					@Html.CheckBoxFor(model => model.AutomaticallyApproveNewUsers, new { @class = "ToggleSwitch" })
				</SettingsControl>

				<SettingsControl caption="Automatically Verify New Users" class="inner-inline" rendermode="LabelLast" helptext="Specifies whether to override site settings and automatically mark users created with OAuth provider data as verified.">
					@Html.CheckBoxFor(model => model.AutomaticallyVerifyNewUsers, new { @class = "ToggleSwitch" })
				</SettingsControl>
			</div>

			<div class="Tools">
				@Html.SubmitButton("", "Save Settings", @Url.NucleusAction("SaveSiteSettings", "OAuthClientAdmin", "OAuth"), new { })				
			</div>
		</fieldset>
	}
</div>

<script type="text/javascript">
	$(document).ready(function() 
	{
		EnableNewUserControls(jQuery('.nucleus-oauth-create-user-control').is(':checked'));
		
		jQuery('.nucleus-oauth-create-user-control').on('change', function() 
		{
			jQuery('.nucleus-oauth-new-user-controls input').toggleClass('disabled');
			EnableNewUserControls(jQuery(this).is(':checked'));
		});	
	});

	function EnableNewUserControls(enable)
	{
		var elements = jQuery('.nucleus-oauth-create-user-controls input, .nucleus-oauth-create-user-controls label');

		elements.prop('disabled', !enable);
				
		if (enable)
		{
			elements.removeAttr('aria-disabled');
			elements.removeClass('disabled');
		}
		else
		{
			elements.attr('aria-disabled', true);
			elements.addClass('disabled');
		}
	}
</script>