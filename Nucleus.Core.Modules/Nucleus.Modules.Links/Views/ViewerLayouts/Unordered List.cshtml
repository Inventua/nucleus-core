@model Nucleus.Modules.Links.ViewModels.Viewer
@using Nucleus.ViewFeatures
@using Nucleus.ViewFeatures.HtmlHelpers
@using Nucleus.Modules.Links.ViewModels
@using Nucleus.Modules.Links.HtmlHelpers
@Html.AddStyle("~!/../../viewer.css")
<ul class="Links">
	@foreach (var link in Model.Links)
	{
		string url = "";
		@switch (link.LinkType)
		{
			case Nucleus.Modules.Links.Models.LinkTypes.Url:
				url = link.LinkUrl?.Url;
				break;
			case Nucleus.Modules.Links.Models.LinkTypes.File:
				url = @Url.FileLink(link.LinkFile?.File);
				break;
			case Nucleus.Modules.Links.Models.LinkTypes.Page:
				url = @Url.PageLink(link.LinkPage?.Page);
				break;
		}
		@if (!String.IsNullOrEmpty(url))
		{
			<li>
				@Html.AddEditingControls(@link.Id)
				<a href="@url" alt="@link.Title" target="@(Model.NewWindow ? "_blank" : "")">@link.Title</a>

				@if (Model.CategoryList != null)
				{
					<span class="category">@link.Category?.Name</span>
				}
				<span>@link.Description</span>
			</li>
		}
	}
</ul>