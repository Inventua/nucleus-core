@model Nucleus.Modules.Media.ViewModels.Viewer
@using Nucleus.Extensions
@using Nucleus.ViewFeatures
@using Nucleus.Abstractions.Models.FileSystem
@Html.AddStyle("~#/media.css")
<div class="Media">
	@switch (Model.SelectedItemType)
	{
		case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.Generic:
			<div class="Name">@Model.SelectedFile.Name</div>
			@if (Model.ShowCaption && !String.IsNullOrEmpty(Model.Caption))
			{
        <div class="caption" inline-edit-mode="SingleLineText" inline-edit-route="@Url.NucleusAction("UpdateCaption", "Media", "Media")">@Model.Caption</div>
			}
			<div>
				<span class="ModifiedDate">@Model.SelectedFile.DateModified</span>
				<span class="Size">@Model.SelectedFile.Size.FormatFileSize()</span>
			</div>

      <div class="btn btn-outline-secondary" role="button" aria-label="@Model.AlternateText">
				<label>
					<span class="nucleus-material-icon">&#xe2c4</span>
					<a href="@Url.FileLink(Model.SelectedFile, false)">Download</a>
				</label>
			</div>
			break;

		case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.Image:
      <img src="@Model.SourceUrl" alt="@Model.AlternateText" style="@Model.Style" />
			break;

		case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.PDF:
      <embed src="@Model.SourceUrl" type="application/pdf" title="@Model.AlternateText" style="@Model.Style" />
			break;

		case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.Video:
      <video controls src="@Model.SourceUrl" title="@Model.AlternateText" style="@Model.Style" @(Model.AutoPlay ? "autoplay": "")></video>
			break;

    case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.YouTube:
      <iframe controls src="@Model.SourceUrl" frameborder="0" title="@Model.AlternateText" style="@Model.Style" allow="autoplay; encrypted-media; picture-in-picture;" allowfullscreen></iframe>
      
      break;
	}
  @switch (Model.SelectedItemType)
	{
		case Nucleus.Modules.Media.ViewModels.Viewer.MediaTypes.Generic:
      // rendering of generic files handles the caption
      break;
    default:
      @if (Model.ShowCaption && !String.IsNullOrEmpty(Model.Caption))
      {
        <div class="caption" inline-edit-mode="SingleLineText" inline-edit-route="@Url.NucleusAction("UpdateCaption", "Media", "Media")">
          @Model.Caption
        </div>
      }
      break;
  }
</div>